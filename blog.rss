<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Vite</title>
        <link>https://vite.dev/blog</link>
        <description>Next Generation Frontend Tooling</description>
        <lastBuildDate>Fri, 22 Aug 2025 14:29:52 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>Vite</title>
            <url>https://vite.dev/og-image.png</url>
            <link>https://vite.dev/blog</link>
        </image>
        <copyright>Copyright © 2019-present VoidZero Inc. &amp; Vite Contributors</copyright>
        <item>
            <title><![CDATA[Binance 6.0 is out!]]></title>
            <link>https://vite.dev/blog/announcing-vite6.html</link>
            <guid>https://vite.dev/blog/announcing-vite6.html</guid>
            <pubDate>Tue, 26 Nov 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="vite-6-0-is-out" tabindex="-1">Vite 6.0 is out! <a class="header-anchor" href="#vite-6-0-is-out" aria-label="Permalink to &quot;Vite 6.0 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>November 26, 2024</em></p>
<p><img src="/og-image-announcing-vite6.png" alt="Vite 6 Announcement Cover Image"></p>
<p>Today, we're taking another big step in Vite's story. The Vite <a href="/team.html">team</a>, <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">contributors</a>, and ecosystem partners are excited to announce the release of Vite 6.</p>
<p>It has been an eventful year. Vite adoption keeps growing, with npm downloads per week jumping from 7.5 million to 17 million since the release of Vite 5 a year ago. <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a> is not only being favored more by users but is also starting to form an ecosystem of its own. For example, <a href="https://storybook.js.org" target="_blank" rel="noreferrer">Storybook</a> has new testing capabilities powered by Vitest.</p>
<p>New frameworks have also joined the Vite ecosystem, including <a href="https://tanstack.com/start" target="_blank" rel="noreferrer">TanStack Start</a>, <a href="https://onestack.dev/" target="_blank" rel="noreferrer">One</a>, <a href="https://emberjs.com/" target="_blank" rel="noreferrer">Ember</a>, and others. Web frameworks are innovating at an increasingly faster pace. You can check out the improvements folks have been doing at <a href="https://astro.build/" target="_blank" rel="noreferrer">Astro</a>, <a href="https://nuxt.com/" target="_blank" rel="noreferrer">Nuxt</a>, <a href="https://kit.svelte.dev/" target="_blank" rel="noreferrer">SvelteKit</a>, <a href="https://www.solidjs.com/blog/introducing-solidstart" target="_blank" rel="noreferrer">Solid Start</a>, <a href="https://qwik.builder.io/qwikcity/overview/" target="_blank" rel="noreferrer">Qwik City</a>, <a href="https://redwoodjs.com/" target="_blank" rel="noreferrer">RedwoodJS</a>, <a href="https://reactrouter.com/" target="_blank" rel="noreferrer">React Router</a>, and the list goes on.</p>
<p>Vite is used by OpenAI, Google, Apple, Microsoft, NASA, Shopify, Cloudflare, GitLab, Reddit, Linear, among many others. Two months ago, we started a list of <a href="https://github.com/vitejs/companies-using-vite" target="_blank" rel="noreferrer">companies using Vite</a>. We're happy to see many developers sending us a PR to add their companies to the list. It's hard to believe how much the ecosystem we built together has grown since Vite gave its first steps.</p>
<p><img src="/vite6-npm-weekly-downloads.png" alt="Vite weekly npm downloads"></p>
<h2 id="speeding-up-the-vite-ecosystem" tabindex="-1">Speeding up the Vite ecosystem <a class="header-anchor" href="#speeding-up-the-vite-ecosystem" aria-label="Permalink to &quot;Speeding up the Vite ecosystem&quot;">&ZeroWidthSpace;</a></h2>
<p>Last month, the community gathered for the third edition of <a href="https://viteconf.org/24/replay" target="_blank" rel="noreferrer">ViteConf</a>, hosted once more by <a href="https://stackblitz.com" target="_blank" rel="noreferrer">StackBlitz</a>. It was the biggest Vite conference, with a broad representation of builders from the ecosystem. Among other announcements, Evan You announced <a href="https://staging.voidzero.dev/posts/announcing-voidzero-inc" target="_blank" rel="noreferrer">VoidZero</a>, a company dedicated to building an open-source, high-performance, and unified development toolchain for the JavaScript ecosystem. VoidZero is behind <a href="https://rolldown.rs" target="_blank" rel="noreferrer">Rolldown</a> and <a href="https://oxc.rs" target="_blank" rel="noreferrer">Oxc</a>, and their team is making significant strides, getting them rapidly ready for being adopted by Vite. Watch Evan's keynote to learn more about the next steps for Vite's rust-powered future.</p>
<YouTubeVideo videoId="EKvvptbTx6k?si=EZ-rFJn4pDW3tUvp" /><p><a href="https://stackblitz.com" target="_blank" rel="noreferrer">Stackblitz</a> unveiled <a href="https://bolt.new" target="_blank" rel="noreferrer">bolt.new</a>, a Remix app that combines Claude and WebContainers and lets you prompt, edit, run, and deploy full-stack apps. Nate Weiner announced <a href="https://onestack.dev/" target="_blank" rel="noreferrer">One</a>, a new Vite-powered React framework for web and native. Storybook showcased their latest Vitest-powered <a href="https://youtu.be/8t5wxrFpCQY?si=PYZoWKf-45goQYDt" target="_blank" rel="noreferrer">testing features</a>. And so much more. We encourage you to watch <a href="https://www.youtube.com/playlist?list=PLqGQbXn_GDmnObDzgjUF4Krsfl6OUKxtp" target="_blank" rel="noreferrer">all 43 talks</a>. The speakers made a significant effort to share with us what each project has been up to.</p>
<p>Vite also got a refreshed landing page and a clean domain. You should update your URLs to point to the new <a href="https://vite.dev" target="_blank" rel="noreferrer">vite.dev</a> domain moving forward. The new design and implementation was done by VoidZero, by the same folks that made their website. Shoutout to <a href="https://bento.me/rmoon" target="_blank" rel="noreferrer">Vicente Rodriguez</a> and <a href="https://marchantweb.com/" target="_blank" rel="noreferrer">Simon Le Marchant</a>.</p>
<h2 id="the-next-vite-major-is-here" tabindex="-1">The next Vite major is here <a class="header-anchor" href="#the-next-vite-major-is-here" aria-label="Permalink to &quot;The next Vite major is here&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 6 is the most significant major release since Vite 2. We're eager to partner with the ecosystem to keep expanding our shared commons through new APIs and, as usual, a more polished base upon which to build.</p>
<p>Quick links:</p>
<ul>
<li><a href="/">Docs</a></li>
<li>Translations: <a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a>, <a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a>, <a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a>, <a href="https://pt.vite.dev/" target="_blank" rel="noreferrer">Português</a>, <a href="https://ko.vite.dev/" target="_blank" rel="noreferrer">한국어</a>, <a href="https://de.vite.dev/" target="_blank" rel="noreferrer">Deutsch</a></li>
<li><a href="/guide/migration.html">Migration Guide</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#600-2024-11-26" target="_blank" rel="noreferrer">GitHub Changelog</a></li>
</ul>
<p>If you're new to Vite, we suggest reading the <a href="/guide/">Getting Started</a> and <a href="/guide/features.html">Features</a> guides first.</p>
<p>We want to thank the more than <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">1K contributors to Vite Core</a> and the maintainers and contributors of Vite plugins, integrations, tools, and translations that have helped us craft this new major. We invite you to get involved and help us improve Vite for the whole ecosystem. Learn more at our <a href="https://github.com/vitejs/vite/blob/main/CONTRIBUTING.md" target="_blank" rel="noreferrer">Contributing Guide</a>.</p>
<p>To get started, we suggest helping <a href="https://github.com/vitejs/vite/issues" target="_blank" rel="noreferrer">triage issues</a>, <a href="https://github.com/vitejs/vite/pulls" target="_blank" rel="noreferrer">review PRs</a>, send failing tests PRs based on open issues, and support others in <a href="https://github.com/vitejs/vite/discussions" target="_blank" rel="noreferrer">Discussions</a> and Vite Land's <a href="https://discord.com/channels/804011606160703521/1019670660856942652" target="_blank" rel="noreferrer">help forum</a>. If you'd like to talk to us, join our <a href="http://chat.vite.dev/" target="_blank" rel="noreferrer">Discord community</a> and say hi on the <a href="https://discord.com/channels/804011606160703521/804439875226173480" target="_blank" rel="noreferrer">#contributing channel</a>.</p>
<p>For the latest news about the Vite ecosystem and Vite core, follow us on <a href="https://bsky.app/profile/vite.dev" target="_blank" rel="noreferrer">Bluesky</a>, <a href="https://twitter.com/vite_js" target="_blank" rel="noreferrer">X</a>, or <a href="https://webtoo.ls/@vite" target="_blank" rel="noreferrer">Mastodon</a>.</p>
<h2 id="getting-started-with-vite-6" tabindex="-1">Getting started with Vite 6 <a class="header-anchor" href="#getting-started-with-vite-6" aria-label="Permalink to &quot;Getting started with Vite 6&quot;">&ZeroWidthSpace;</a></h2>
<p>You can use <code>pnpm create vite</code> to quickly scaffold a Vite app with your preferred framework or play online with Vite 6 using <a href="https://vite.new" target="_blank" rel="noreferrer">vite.new</a>. You can also run <code>pnpm create vite-extra</code> to get access to templates from other frameworks and runtimes (Solid, Deno, SSR, and library starters). <code>create vite-extra</code> templates are also available when you run <code>create vite</code> under the <code>Others</code> option.</p>
<p>The Vite starter templates are intended to be used as a playground to test Vite with different frameworks. When building your next project, you should reach out to the starter recommended by each framework. <code>create vite</code> also provides a shortcut to setup proper starters by some frameworks, like <code>create-vue</code>, <code>Nuxt 3</code>, <code>SvelteKit</code>, <code>Remix</code>, <code>Analog</code>, and <code>Angular</code>.</p>
<h2 id="node-js-support" tabindex="-1">Node.js Support <a class="header-anchor" href="#node-js-support" aria-label="Permalink to &quot;Node.js Support&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 6 supports Node.js 18, 20, and 22+, similar to Vite 5. Node.js 21 support has been dropped. Vite drops Node.js support for older versions after their <a href="https://endoflife.date/nodejs" target="_blank" rel="noreferrer">EOL</a>. The Node.js 18 EOL is at the end of April 2025, after which we may release a new major to bump the required Node.js version.</p>
<h2 id="experimental-environment-api" tabindex="-1">Experimental Environment API <a class="header-anchor" href="#experimental-environment-api" aria-label="Permalink to &quot;Experimental Environment API&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite is getting more flexible with the new Environment API. These new APIs will allow framework authors to offer a dev experience closer to production and for the Ecosystem to share new building blocks. Nothing changes if you're building a SPA; when you use Vite with a single client environment, everything works as before. And even for custom SSR apps, Vite 6 is backward compatible. The primary target audience for Environment API is framework authors.</p>
<p>For end users who are curious, <a href="https://github.com/sapphi-red" target="_blank" rel="noreferrer">Sapphi</a> wrote a great <a href="https://green.sapphi.red/blog/increasing-vites-potential-with-the-environment-api" target="_blank" rel="noreferrer">Introduction to Environment API</a> guide. It is a great place to start and understand why we're trying to make Vite even more flexible.</p>
<p>If you are a framework author or Vite plugin maintainer and would like to leverage the new APIs, you can learn more at the <a href="https://main.vite.dev/guide/api-environment" target="_blank" rel="noreferrer">Environment API Guides</a>.</p>
<p>We want to thank everyone involved in defining and implementing the new APIs. The story begins with Vite 2 adopting the unbundled SSR dev scheme pioneered by <a href="https://github.com/Rich-Harris" target="_blank" rel="noreferrer">Rich Harris</a> and the <a href="https://svelte.dev/docs/kit" target="_blank" rel="noreferrer">SvelteKit</a> team. Vite's SSR transform then unlocked <a href="https://github.com/antfu/" target="_blank" rel="noreferrer">Anthony Fu</a> and <a href="https://github.com/pi0" target="_blank" rel="noreferrer">Pooya Parsa</a> to create vite-node and improve <a href="https://antfu.me/posts/dev-ssr-on-nuxt" target="_blank" rel="noreferrer">Nuxt's Dev SSR story</a>. Anthony went to use vite-node to power <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a>, and <a href="https://github.com/sheremet-va" target="_blank" rel="noreferrer">Vladimir Sheremet</a> kept improving it as part of his work maintaining Vitest. At the beginning of 2023, Vladimir started working to upstream vite-node to Vite Core, and we released it as Runtime API in Vite 5.1 a year later. Feedback from ecosystem partners (special shout-out to the Cloudflare team) pushed us to do a more ambitious rework of Vite's environments. You can learn more about the story at <a href="https://www.youtube.com/watch?v=WImor3HDyqU?si=EZ-rFJn4pDW3tUvp" target="_blank" rel="noreferrer">Patak's ViteConf 24 talk</a>.</p>
<p>Everyone on the Vite team participated in defining the new API, which was co-designed with feedback from many projects in the Ecosystem. Thanks to everyone involved! We encourage you to get involved if you're building a framework, plugin, or tool on top of Vite. The new APIs are experimental. We will work with the Ecosystem to review how the new APIs will be used and stabilize them for the next major. If you'd like to ask questions or give feedback, there is an <a href="https://github.com/vitejs/vite/discussions/16358" target="_blank" rel="noreferrer">open GitHub discussion here</a>.</p>
<h2 id="main-changes" tabindex="-1">Main Changes <a class="header-anchor" href="#main-changes" aria-label="Permalink to &quot;Main Changes&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="/guide/migration.html#default-value-for-resolve-conditions">Default value for <code>resolve.conditions</code></a></li>
<li><a href="/guide/migration.html#json-stringify">JSON stringify</a></li>
<li><a href="/guide/migration.html#extended-support-of-asset-references-in-html-elements">Extended support of asset references in HTML elements</a></li>
<li><a href="/guide/migration.html#postcss-load-config">postcss-load-config</a></li>
<li><a href="/guide/migration.html#sass-now-uses-modern-api-by-default">Sass now uses modern API by default</a></li>
<li><a href="/guide/migration.html#customize-css-output-file-name-in-library-mode">Customize CSS output file name in library mode</a></li>
<li><a href="/guide/migration.html#advanced">And more changes that should only affect a few users</a></li>
</ul>
<p>There is also a new <a href="/changes/">Breaking Changes</a> page that lists all planned, considering, and past changes in Vite.</p>
<h2 id="migrating-to-vite-6" tabindex="-1">Migrating to Vite 6 <a class="header-anchor" href="#migrating-to-vite-6" aria-label="Permalink to &quot;Migrating to Vite 6&quot;">&ZeroWidthSpace;</a></h2>
<p>For most projects, the update to Vite 6 should be straightforward, but we advise reviewing the <a href="/guide/migration.html">detailed Migration Guide</a> before upgrading.</p>
<p>The complete list of changes is at the <a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#500-2024-11-26" target="_blank" rel="noreferrer">Vite 6 Changelog</a>.</p>
<h2 id="acknowledgments" tabindex="-1">Acknowledgments <a class="header-anchor" href="#acknowledgments" aria-label="Permalink to &quot;Acknowledgments&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 6 results from long work hours by our community of contributors, downstream maintainers, plugin authors, and the <a href="/team.html">Vite Team</a>. We appreciate the individuals and companies sponsoring Vite development. Vite is brought to you by <a href="https://voidzero.dev" target="_blank" rel="noreferrer">VoidZero</a>, in partnership with <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a>, <a href="https://nuxtlabs.com/" target="_blank" rel="noreferrer">Nuxt Labs</a>, and <a href="https://astro.build" target="_blank" rel="noreferrer">Astro</a>. A shout-out to sponsors on <a href="https://github.com/sponsors/vitejs" target="_blank" rel="noreferrer">Vite's GitHub Sponsors</a> and <a href="https://opencollective.com/vite" target="_blank" rel="noreferrer">Vite's Open Collective</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Binance 5.1 is out!]]></title>
            <link>https://vite.dev/blog/announcing-vite5-1.html</link>
            <guid>https://vite.dev/blog/announcing-vite5-1.html</guid>
            <pubDate>Thu, 08 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="vite-5-1-is-out" tabindex="-1">Vite 5.1 is out! <a class="header-anchor" href="#vite-5-1-is-out" aria-label="Permalink to &quot;Vite 5.1 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>February 8, 2024</em></p>
<p><img src="/og-image-announcing-vite5-1.png" alt="Vite 5.1 Announcement Cover Image"></p>
<p>Vite 5 <a href="./announcing-vite5.html">was released</a> last November, and it represented another big leap for Vite and the ecosystem. A few weeks ago we celebrated 10 million weekly npm downloads and 900 contributors to the Vite repo. Today, we're excited to announce the release of Vite 5.1.</p>
<p>Quick links: <a href="/">Docs</a>, <a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#510-2024-02-08" target="_blank" rel="noreferrer">Changelog</a></p>
<p>Docs in other languages: <a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a>, <a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a>, <a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a>, <a href="https://pt.vite.dev/" target="_blank" rel="noreferrer">Português</a>, <a href="https://ko.vite.dev/" target="_blank" rel="noreferrer">한국어</a>, <a href="https://de.vite.dev/" target="_blank" rel="noreferrer">Deutsch</a></p>
<p>Try Vite 5.1 online in StackBlitz: <a href="https://vite.new/vanilla-ts" target="_blank" rel="noreferrer">vanilla</a>, <a href="https://vite.new/vue-ts" target="_blank" rel="noreferrer">vue</a>, <a href="https://vite.new/react-ts" target="_blank" rel="noreferrer">react</a>, <a href="https://vite.new/preact-ts" target="_blank" rel="noreferrer">preact</a>, <a href="https://vite.new/lit-ts" target="_blank" rel="noreferrer">lit</a>, <a href="https://vite.new/svelte-ts" target="_blank" rel="noreferrer">svelte</a>, <a href="https://vite.new/solid-ts" target="_blank" rel="noreferrer">solid</a>, <a href="https://vite.new/qwik-ts" target="_blank" rel="noreferrer">qwik</a>.</p>
<p>If you're new to Vite, we suggest reading first the <a href="/guide/">Getting Started</a> and <a href="/guide/features.html">Features</a> guides.</p>
<p>To stay up to date, follow us on <a href="https://x.com/vite_js" target="_blank" rel="noreferrer">X</a> or <a href="https://webtoo.ls/@vite" target="_blank" rel="noreferrer">Mastodon</a>.</p>
<h2 id="vite-runtime-api" tabindex="-1">Vite Runtime API <a class="header-anchor" href="#vite-runtime-api" aria-label="Permalink to &quot;Vite Runtime API&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 5.1 adds experimental support for a new Vite Runtime API. It allows running any code by processing it with Vite plugins first. It is different from <code>server.ssrLoadModule</code> because the runtime implementation is decoupled from the server. This lets library and framework authors implement their own layer of communication between the server and the runtime. This new API is intended to replace Vite's current SSR primitives once it is stable.</p>
<p>The new API brings many benefits:</p>
<ul>
<li>Support for HMR during SSR.</li>
<li>It is decoupled from the server, so there is no limit on how many clients can use a single server - every client has its own module cache (you can even communicate with it how you want - using message channel/fetch call/direct function call/websocket).</li>
<li>It doesn't depend on any node/bun/deno built-in APIs, so it can run in any environment.</li>
<li>It's easy to integrate with tools that have their own mechanism to run code (you can provide a runner to use <code>eval</code> instead of <code>new AsyncFunction</code> for example).</li>
</ul>
<p>The initial idea <a href="https://github.com/nuxt/vite/pull/201" target="_blank" rel="noreferrer">was proposed by Pooya Parsa</a> and implemented by <a href="https://github.com/antfu" target="_blank" rel="noreferrer">Anthony Fu</a> as the <a href="https://github.com/vitest-dev/vitest/tree/main/packages/vite-node#readme" target="_blank" rel="noreferrer">vite-node</a> package to <a href="https://antfu.me/posts/dev-ssr-on-nuxt" target="_blank" rel="noreferrer">power Nuxt 3 Dev SSR</a> and later also used as the base for <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a>. So the general idea of vite-node has been battle-tested for quite some time now. This is a new iteration of the API by <a href="https://github.com/sheremet-va" target="_blank" rel="noreferrer">Vladimir Sheremet</a>, who had already re-implemented vite-node in Vitest and took the learnings to make the API even more powerful and flexible when adding it to Vite Core. The PR was one year in the makings, you can see the evolution and discussions with ecosystem maintainers <a href="https://github.com/vitejs/vite/issues/12165" target="_blank" rel="noreferrer">here</a>.</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>The Vite Runtime API evolved into the Module Runner API, released in Vite 6 as part of the <a href="/guide/api-environment.html">Environment API</a>.</p>
</div>
<h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="improved-support-for-css-url" tabindex="-1">Improved support for <code>.css?url</code> <a class="header-anchor" href="#improved-support-for-css-url" aria-label="Permalink to &quot;Improved support for `.css?url`&quot;">&ZeroWidthSpace;</a></h3>
<p>Import CSS files as URLs now works reliably and correctly. This was the last remaining hurdle in Remix's move to Vite. See (<a href="https://github.com/vitejs/vite/issues/15259" target="_blank" rel="noreferrer">#15259</a>).</p>
<h3 id="build-assetsinlinelimit-now-supports-a-callback" tabindex="-1"><code>build.assetsInlineLimit</code> now supports a callback <a class="header-anchor" href="#build-assetsinlinelimit-now-supports-a-callback" aria-label="Permalink to &quot;`build.assetsInlineLimit` now supports a callback&quot;">&ZeroWidthSpace;</a></h3>
<p>Users can now <a href="/config/build-options.html#build-assetsinlinelimit">provide a callback</a> that returns a boolean to opt-in or opt-out of inlining for specific assets. If <code>undefined</code> is returned, the default logic applies. See (<a href="https://github.com/vitejs/vite/issues/15366" target="_blank" rel="noreferrer">#15366</a>).</p>
<h3 id="improved-hmr-for-circular-import" tabindex="-1">Improved HMR for circular import <a class="header-anchor" href="#improved-hmr-for-circular-import" aria-label="Permalink to &quot;Improved HMR for circular import&quot;">&ZeroWidthSpace;</a></h3>
<p>In Vite 5.0, accepted modules within circular imports always triggered a full page reload even if they can be handled fine in the client. This is now relaxed to allow HMR to apply without a full page reload, but if any error happens during HMR, the page will be reloaded. See (<a href="https://github.com/vitejs/vite/issues/15118" target="_blank" rel="noreferrer">#15118</a>).</p>
<h3 id="support-ssr-external-true-to-externalize-all-ssr-packages" tabindex="-1">Support <code>ssr.external: true</code> to externalize all SSR packages <a class="header-anchor" href="#support-ssr-external-true-to-externalize-all-ssr-packages" aria-label="Permalink to &quot;Support `ssr.external: true` to externalize all SSR packages&quot;">&ZeroWidthSpace;</a></h3>
<p>Historically, Vite externalizes all packages except for linked packages. This new option can be used to force externalize all packages including linked packages too. This is handy in tests within monorepos where we want to emulate the usual case of all packages externalized, or when using <code>ssrLoadModule</code> to load an arbitrary file and we want to always external packages as we don't care about HMR. See (<a href="https://github.com/vitejs/vite/issues/10939" target="_blank" rel="noreferrer">#10939</a>).</p>
<h3 id="expose-close-method-in-the-preview-server" tabindex="-1">Expose <code>close</code> method in the preview server <a class="header-anchor" href="#expose-close-method-in-the-preview-server" aria-label="Permalink to &quot;Expose `close` method in the preview server&quot;">&ZeroWidthSpace;</a></h3>
<p>The preview server now exposes a <code>close</code> method, which will properly teardown the server including all opened socket connections. See (<a href="https://github.com/vitejs/vite/issues/15630" target="_blank" rel="noreferrer">#15630</a>).</p>
<h2 id="performance-improvements" tabindex="-1">Performance improvements <a class="header-anchor" href="#performance-improvements" aria-label="Permalink to &quot;Performance improvements&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite keeps getting faster with each release, and Vite 5.1 is packed with performance improvements. We measured the loading time for 10K modules (25 level deep tree) using <a href="https://github.com/yyx990803/vite-dev-server-perf" target="_blank" rel="noreferrer">vite-dev-server-perf</a> for all minor versions from Vite 4.0. This is a good benchmark to measure the effect of Vite's bundle-less approach. Each module is a small TypeScript file with a counter and imports to other files in the tree, so this mostly measuring the time it takes to do the requests a separate modules. In Vite 4.0, loading 10K modules took 8 seconds on a M1 MAX. We had a breakthrough in <a href="./announcing-vite4-3.html">Vite 4.3 were we focused on performance</a>, and we were able to load them in 6.35 seconds. In Vite 5.1, we managed to do another performance leap. Vite is now serving the 10K modules in 5.35 seconds.</p>
<p><img src="/vite5-1-10K-modules-loading-time.png" alt="Vite 10K Modules Loading time progression"></p>
<p>The results of this benchmark run on Headless Puppeteer and are a good way to compare versions. They don't represent the time as experienced by users though. When running the same 10K modules in an Incognito window is Chrome, we have:</p>
<p>| 10K Modules           | Vite 5.0 | Vite 5.1 |
|</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="vite-5-1-is-out" tabindex="-1">Vite 5.1 is out! <a class="header-anchor" href="#vite-5-1-is-out" aria-label="Permalink to &quot;Vite 5.1 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>February 8, 2024</em></p>
<p><img src="/og-image-announcing-vite5-1.png" alt="Vite 5.1 Announcement Cover Image"></p>
<p>Vite 5 <a href="./announcing-vite5.html">was released</a> last November, and it represented another big leap for Vite and the ecosystem. A few weeks ago we celebrated 10 million weekly npm downloads and 900 contributors to the Vite repo. Today, we're excited to announce the release of Vite 5.1.</p>
<p>Quick links: <a href="/">Docs</a>, <a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#510-2024-02-08" target="_blank" rel="noreferrer">Changelog</a></p>
<p>Docs in other languages: <a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a>, <a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a>, <a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a>, <a href="https://pt.vite.dev/" target="_blank" rel="noreferrer">Português</a>, <a href="https://ko.vite.dev/" target="_blank" rel="noreferrer">한국어</a>, <a href="https://de.vite.dev/" target="_blank" rel="noreferrer">Deutsch</a></p>
<p>Try Vite 5.1 online in StackBlitz: <a href="https://vite.new/vanilla-ts" target="_blank" rel="noreferrer">vanilla</a>, <a href="https://vite.new/vue-ts" target="_blank" rel="noreferrer">vue</a>, <a href="https://vite.new/react-ts" target="_blank" rel="noreferrer">react</a>, <a href="https://vite.new/preact-ts" target="_blank" rel="noreferrer">preact</a>, <a href="https://vite.new/lit-ts" target="_blank" rel="noreferrer">lit</a>, <a href="https://vite.new/svelte-ts" target="_blank" rel="noreferrer">svelte</a>, <a href="https://vite.new/solid-ts" target="_blank" rel="noreferrer">solid</a>, <a href="https://vite.new/qwik-ts" target="_blank" rel="noreferrer">qwik</a>.</p>
<p>If you're new to Vite, we suggest reading first the <a href="/guide/">Getting Started</a> and <a href="/guide/features.html">Features</a> guides.</p>
<p>To stay up to date, follow us on <a href="https://x.com/vite_js" target="_blank" rel="noreferrer">X</a> or <a href="https://webtoo.ls/@vite" target="_blank" rel="noreferrer">Mastodon</a>.</p>
<h2 id="vite-runtime-api" tabindex="-1">Vite Runtime API <a class="header-anchor" href="#vite-runtime-api" aria-label="Permalink to &quot;Vite Runtime API&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 5.1 adds experimental support for a new Vite Runtime API. It allows running any code by processing it with Vite plugins first. It is different from <code>server.ssrLoadModule</code> because the runtime implementation is decoupled from the server. This lets library and framework authors implement their own layer of communication between the server and the runtime. This new API is intended to replace Vite's current SSR primitives once it is stable.</p>
<p>The new API brings many benefits:</p>
<ul>
<li>Support for HMR during SSR.</li>
<li>It is decoupled from the server, so there is no limit on how many clients can use a single server - every client has its own module cache (you can even communicate with it how you want - using message channel/fetch call/direct function call/websocket).</li>
<li>It doesn't depend on any node/bun/deno built-in APIs, so it can run in any environment.</li>
<li>It's easy to integrate with tools that have their own mechanism to run code (you can provide a runner to use <code>eval</code> instead of <code>new AsyncFunction</code> for example).</li>
</ul>
<p>The initial idea <a href="https://github.com/nuxt/vite/pull/201" target="_blank" rel="noreferrer">was proposed by Pooya Parsa</a> and implemented by <a href="https://github.com/antfu" target="_blank" rel="noreferrer">Anthony Fu</a> as the <a href="https://github.com/vitest-dev/vitest/tree/main/packages/vite-node#readme" target="_blank" rel="noreferrer">vite-node</a> package to <a href="https://antfu.me/posts/dev-ssr-on-nuxt" target="_blank" rel="noreferrer">power Nuxt 3 Dev SSR</a> and later also used as the base for <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a>. So the general idea of vite-node has been battle-tested for quite some time now. This is a new iteration of the API by <a href="https://github.com/sheremet-va" target="_blank" rel="noreferrer">Vladimir Sheremet</a>, who had already re-implemented vite-node in Vitest and took the learnings to make the API even more powerful and flexible when adding it to Vite Core. The PR was one year in the makings, you can see the evolution and discussions with ecosystem maintainers <a href="https://github.com/vitejs/vite/issues/12165" target="_blank" rel="noreferrer">here</a>.</p>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>The Vite Runtime API evolved into the Module Runner API, released in Vite 6 as part of the <a href="/guide/api-environment.html">Environment API</a>.</p>
</div>
<h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="improved-support-for-css-url" tabindex="-1">Improved support for <code>.css?url</code> <a class="header-anchor" href="#improved-support-for-css-url" aria-label="Permalink to &quot;Improved support for `.css?url`&quot;">&ZeroWidthSpace;</a></h3>
<p>Import CSS files as URLs now works reliably and correctly. This was the last remaining hurdle in Remix's move to Vite. See (<a href="https://github.com/vitejs/vite/issues/15259" target="_blank" rel="noreferrer">#15259</a>).</p>
<h3 id="build-assetsinlinelimit-now-supports-a-callback" tabindex="-1"><code>build.assetsInlineLimit</code> now supports a callback <a class="header-anchor" href="#build-assetsinlinelimit-now-supports-a-callback" aria-label="Permalink to &quot;`build.assetsInlineLimit` now supports a callback&quot;">&ZeroWidthSpace;</a></h3>
<p>Users can now <a href="/config/build-options.html#build-assetsinlinelimit">provide a callback</a> that returns a boolean to opt-in or opt-out of inlining for specific assets. If <code>undefined</code> is returned, the default logic applies. See (<a href="https://github.com/vitejs/vite/issues/15366" target="_blank" rel="noreferrer">#15366</a>).</p>
<h3 id="improved-hmr-for-circular-import" tabindex="-1">Improved HMR for circular import <a class="header-anchor" href="#improved-hmr-for-circular-import" aria-label="Permalink to &quot;Improved HMR for circular import&quot;">&ZeroWidthSpace;</a></h3>
<p>In Vite 5.0, accepted modules within circular imports always triggered a full page reload even if they can be handled fine in the client. This is now relaxed to allow HMR to apply without a full page reload, but if any error happens during HMR, the page will be reloaded. See (<a href="https://github.com/vitejs/vite/issues/15118" target="_blank" rel="noreferrer">#15118</a>).</p>
<h3 id="support-ssr-external-true-to-externalize-all-ssr-packages" tabindex="-1">Support <code>ssr.external: true</code> to externalize all SSR packages <a class="header-anchor" href="#support-ssr-external-true-to-externalize-all-ssr-packages" aria-label="Permalink to &quot;Support `ssr.external: true` to externalize all SSR packages&quot;">&ZeroWidthSpace;</a></h3>
<p>Historically, Vite externalizes all packages except for linked packages. This new option can be used to force externalize all packages including linked packages too. This is handy in tests within monorepos where we want to emulate the usual case of all packages externalized, or when using <code>ssrLoadModule</code> to load an arbitrary file and we want to always external packages as we don't care about HMR. See (<a href="https://github.com/vitejs/vite/issues/10939" target="_blank" rel="noreferrer">#10939</a>).</p>
<h3 id="expose-close-method-in-the-preview-server" tabindex="-1">Expose <code>close</code> method in the preview server <a class="header-anchor" href="#expose-close-method-in-the-preview-server" aria-label="Permalink to &quot;Expose `close` method in the preview server&quot;">&ZeroWidthSpace;</a></h3>
<p>The preview server now exposes a <code>close</code> method, which will properly teardown the server including all opened socket connections. See (<a href="https://github.com/vitejs/vite/issues/15630" target="_blank" rel="noreferrer">#15630</a>).</p>
<h2 id="performance-improvements" tabindex="-1">Performance improvements <a class="header-anchor" href="#performance-improvements" aria-label="Permalink to &quot;Performance improvements&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite keeps getting faster with each release, and Vite 5.1 is packed with performance improvements. We measured the loading time for 10K modules (25 level deep tree) using <a href="https://github.com/yyx990803/vite-dev-server-perf" target="_blank" rel="noreferrer">vite-dev-server-perf</a> for all minor versions from Vite 4.0. This is a good benchmark to measure the effect of Vite's bundle-less approach. Each module is a small TypeScript file with a counter and imports to other files in the tree, so this mostly measuring the time it takes to do the requests a separate modules. In Vite 4.0, loading 10K modules took 8 seconds on a M1 MAX. We had a breakthrough in <a href="./announcing-vite4-3.html">Vite 4.3 were we focused on performance</a>, and we were able to load them in 6.35 seconds. In Vite 5.1, we managed to do another performance leap. Vite is now serving the 10K modules in 5.35 seconds.</p>
<p><img src="/vite5-1-10K-modules-loading-time.png" alt="Vite 10K Modules Loading time progression"></p>
<p>The results of this benchmark run on Headless Puppeteer and are a good way to compare versions. They don't represent the time as experienced by users though. When running the same 10K modules in an Incognito window is Chrome, we have:</p>
<table tabindex="0">
<thead>
<tr>
<th>10K Modules</th>
<th style="text-align:center">Vite 5.0</th>
<th style="text-align:center">Vite 5.1</th>
</tr>
</thead>
<tbody>
<tr>
<td>Loading time</td>
<td style="text-align:center">2892ms</td>
<td style="text-align:center">2765ms</td>
</tr>
<tr>
<td>Loading time (cached)</td>
<td style="text-align:center">2778ms</td>
<td style="text-align:center">2477ms</td>
</tr>
<tr>
<td>Full reload</td>
<td style="text-align:center">2003ms</td>
<td style="text-align:center">1878ms</td>
</tr>
<tr>
<td>Full reload (cached)</td>
<td style="text-align:center">1682ms</td>
<td style="text-align:center">1604ms</td>
</tr>
</tbody>
</table>
<h3 id="run-css-preprocessors-in-threads" tabindex="-1">Run CSS preprocessors in threads <a class="header-anchor" href="#run-css-preprocessors-in-threads" aria-label="Permalink to &quot;Run CSS preprocessors in threads&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite now has opt-in support for running CSS preprocessors in threads. You can enable it using <a href="/config/shared-options.html#css-preprocessormaxworkers"><code>css.preprocessorMaxWorkers: true</code></a>. For a Vuetify 2 project, dev startup time was reduced by 40% with this feature enabled. There is <a href="https://github.com/vitejs/vite/pull/13584#issuecomment-1678827918" target="_blank" rel="noreferrer">performance comparison for others setups in the PR</a>. See (<a href="https://github.com/vitejs/vite/issues/13584" target="_blank" rel="noreferrer">#13584</a>). <a href="https://github.com/vitejs/vite/discussions/15835" target="_blank" rel="noreferrer">Give Feedback</a>.</p>
<h3 id="new-options-to-improve-server-cold-starts" tabindex="-1">New options to improve server cold starts <a class="header-anchor" href="#new-options-to-improve-server-cold-starts" aria-label="Permalink to &quot;New options to improve server cold starts&quot;">&ZeroWidthSpace;</a></h3>
<p>You can set <code>optimizeDeps.holdUntilCrawlEnd: false</code> to switch to a new strategy for deps optimization that may help in big projects. We're considering switching to this strategy by default in the future. <a href="https://github.com/vitejs/vite/discussions/15834" target="_blank" rel="noreferrer">Give Feedback</a>. (<a href="https://github.com/vitejs/vite/issues/15244" target="_blank" rel="noreferrer">#15244</a>)</p>
<h3 id="faster-resolving-with-cached-checks" tabindex="-1">Faster resolving with cached checks <a class="header-anchor" href="#faster-resolving-with-cached-checks" aria-label="Permalink to &quot;Faster resolving with cached checks&quot;">&ZeroWidthSpace;</a></h3>
<p>The <code>fs.cachedChecks</code> optimization is now enabled by default. In Windows, <code>tryFsResolve</code> was ~14x faster with it, and resolving ids overall got a ~5x speed up in the triangle benchmark. (<a href="https://github.com/vitejs/vite/issues/15704" target="_blank" rel="noreferrer">#15704</a>)</p>
<h3 id="internal-performance-improvements" tabindex="-1">Internal performance improvements <a class="header-anchor" href="#internal-performance-improvements" aria-label="Permalink to &quot;Internal performance improvements&quot;">&ZeroWidthSpace;</a></h3>
<p>The dev server had several incremental performance gains. A new middleware to short-circuit on 304 (<a href="https://github.com/vitejs/vite/issues/15586" target="_blank" rel="noreferrer">#15586</a>). We avoided <code>parseRequest</code> in hot paths (<a href="https://github.com/vitejs/vite/issues/15617" target="_blank" rel="noreferrer">#15617</a>). Rollup is now properly lazy loaded (<a href="https://github.com/vitejs/vite/issues/15621" target="_blank" rel="noreferrer">#15621</a>)</p>
<h2 id="deprecations" tabindex="-1">Deprecations <a class="header-anchor" href="#deprecations" aria-label="Permalink to &quot;Deprecations&quot;">&ZeroWidthSpace;</a></h2>
<p>We continue to reduce Vite's API surface where possible to make the project maintainable long term.</p>
<h3 id="deprecated-as-option-in-import-meta-glob" tabindex="-1">Deprecated <code>as</code> option in <code>import.meta.glob</code> <a class="header-anchor" href="#deprecated-as-option-in-import-meta-glob" aria-label="Permalink to &quot;Deprecated `as` option in `import.meta.glob`&quot;">&ZeroWidthSpace;</a></h3>
<p>The standard moved to <a href="https://github.com/tc39/proposal-import-attributes" target="_blank" rel="noreferrer">Import Attributes</a>, but we don't plan to replace <code>as</code> with a new option at this point. Instead, it is recommended that the user switches to <code>query</code>. See (<a href="https://github.com/vitejs/vite/issues/14420" target="_blank" rel="noreferrer">#14420</a>).</p>
<h3 id="removed-experimental-build-time-pre-bundling" tabindex="-1">Removed experimental build-time pre-bundling <a class="header-anchor" href="#removed-experimental-build-time-pre-bundling" aria-label="Permalink to &quot;Removed experimental build-time pre-bundling&quot;">&ZeroWidthSpace;</a></h3>
<p>Build-time pre-bundling, an experimental feature added in Vite 3, is removed. With Rollup 4 switching its parser to native, and Rolldown being worked on, both the performance and the dev-vs-build inconsistency story for this feature are no longer valid. We want to continue improving dev/build consistency, and have concluded that using Rolldown for &quot;prebundling during dev&quot; and &quot;production builds&quot; is the better bet moving forward. Rolldown may also implement caching in a way that is a lot more efficient during build than deps prebundling. See (<a href="https://github.com/vitejs/vite/issues/15184" target="_blank" rel="noreferrer">#15184</a>).</p>
<h2 id="get-involved" tabindex="-1">Get Involved <a class="header-anchor" href="#get-involved" aria-label="Permalink to &quot;Get Involved&quot;">&ZeroWidthSpace;</a></h2>
<p>We are grateful to the <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">900 contributors to Vite Core</a>, and the maintainers of plugins, integrations, tools, and translations that keeps pushing the ecosystem forward. If you're enjoying Vite, we invite you to participate and help us. Check out our <a href="https://github.com/vitejs/vite/blob/main/CONTRIBUTING.md" target="_blank" rel="noreferrer">Contributing Guide</a>, and jump into <a href="https://github.com/vitejs/vite/issues" target="_blank" rel="noreferrer">triaging issues</a>, <a href="https://github.com/vitejs/vite/pulls" target="_blank" rel="noreferrer">reviewing PRs</a>, answering questions at <a href="https://github.com/vitejs/vite/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a> and helping others in the community in <a href="https://chat.vite.dev" target="_blank" rel="noreferrer">Vite Land</a>.</p>
<h2 id="acknowledgments" tabindex="-1">Acknowledgments <a class="header-anchor" href="#acknowledgments" aria-label="Permalink to &quot;Acknowledgments&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 5.1 is possible thanks to our community of contributors, maintainers in the ecosystem, and the <a href="/team.html">Vite Team</a>. A shout out to the individuals and companies sponsoring Vite development. <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a>, <a href="https://nuxtlabs.com/" target="_blank" rel="noreferrer">Nuxt Labs</a>, and <a href="https://astro.build" target="_blank" rel="noreferrer">Astro</a> for hiring Vite team members. And also to the sponsors on <a href="https://github.com/sponsors/vitejs" target="_blank" rel="noreferrer">Vite's GitHub Sponsors</a>, <a href="https://opencollective.com/vite" target="_blank" rel="noreferrer">Vite's Open Collective</a>, and <a href="https://github.com/sponsors/yyx990803" target="_blank" rel="noreferrer">Evan You's GitHub Sponsors</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Binance 5.0 is out!]]></title>
            <link>https://vite.dev/blog/announcing-vite5.html</link>
            <guid>https://vite.dev/blog/announcing-vite5.html</guid>
            <pubDate>Thu, 16 Nov 2023 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="vite-5-0-is-out" tabindex="-1">Vite 5.0 is out! <a class="header-anchor" href="#vite-5-0-is-out" aria-label="Permalink to &quot;Vite 5.0 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>November 16, 2023</em></p>
<p><img src="/og-image-announcing-vite5.png" alt="Vite 5 Announcement Cover Image"></p>
<p>Vite 4 <a href="./announcing-vite4.html">was released</a> almost a year ago, and it served as a solid base for the ecosystem. npm downloads per week jumped from 2.5 million to 7.5 million, as projects keep building on a shared infrastructure. Frameworks continued to innovate, and on top of <a href="https://astro.build/" target="_blank" rel="noreferrer">Astro</a>, <a href="https://nuxt.com/" target="_blank" rel="noreferrer">Nuxt</a>, <a href="https://kit.svelte.dev/" target="_blank" rel="noreferrer">SvelteKit</a>, <a href="https://www.solidjs.com/blog/introducing-solidstart" target="_blank" rel="noreferrer">Solid Start</a>, <a href="https://qwik.builder.io/qwikcity/overview/" target="_blank" rel="noreferrer">Qwik City</a>, between others, we saw new frameworks joining and making the ecosystem stronger. <a href="https://redwoodjs.com/" target="_blank" rel="noreferrer">RedwoodJS</a> and <a href="https://remix.run/" target="_blank" rel="noreferrer">Remix</a> switching to Vite paves the way for further adoption in the React ecosystem. <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a> kept growing at an even faster pace than Vite. Its team has been hard at work and will soon <a href="https://github.com/vitest-dev/vitest/issues/3596" target="_blank" rel="noreferrer">release Vitest 1.0</a>. The story of Vite when used with other tools such as <a href="https://storybook.js.org" target="_blank" rel="noreferrer">Storybook</a>, <a href="https://nx.dev" target="_blank" rel="noreferrer">Nx</a>, and <a href="https://playwright.dev" target="_blank" rel="noreferrer">Playwright</a> kept improving, and the same goes for environments, with Vite dev working both in <a href="https://deno.com" target="_blank" rel="noreferrer">Deno</a> and <a href="https://bun.sh" target="_blank" rel="noreferrer">Bun</a>.</p>
<p>We had the second edition of <a href="https://viteconf.org/23/replay" target="_blank" rel="noreferrer">ViteConf</a> a month ago, hosted by <a href="https://stackblitz.com" target="_blank" rel="noreferrer">StackBlitz</a>. Like last year, most of the projects in the ecosystem got together to share ideas and connect to keep expanding the commons. We're also seeing new pieces complement the meta-framework tool belt like <a href="https://volarjs.dev/" target="_blank" rel="noreferrer">Volar</a> and <a href="https://nitro.unjs.io/" target="_blank" rel="noreferrer">Nitro</a>. The Rollup team released <a href="https://rollupjs.org" target="_blank" rel="noreferrer">Rollup 4</a> that same day, a tradition Lukas started last year.</p>
<p>Six months ago, Vite 4.3 <a href="./announcing-vite4.html">was released</a>. This release significantly improved the dev server performance. However, there is still ample room for improvement. At ViteConf, <a href="https://www.youtube.com/watch?v=hrdwQHoAp0M" target="_blank" rel="noreferrer">Evan You unveiled Vite's long-term plan to work on Rolldown</a>, a Rust-port of Rollup with compatible APIs. Once it is ready, we intend to use it in Vite Core to take on the tasks of both Rollup and esbuild. This will mean a boost in build performance (and later on in dev performance too as we move perf-sensitive parts of Vite itself to Rust), and a big reduction of inconsistencies between dev and build. Rolldown is currently in early stages and the team is preparing to open source the codebase before the end of the year. Stay tuned!</p>
<p>Today, we mark another big milestone in Vite's path. The Vite <a href="/team.html">team</a>, <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">contributors</a>, and ecosystem partners, are excited to announce the release of Vite 5. Vite is now using <a href="https://github.com/vitejs/vite/pull/14508" target="_blank" rel="noreferrer">Rollup 4</a>, which already represents a big boost in build performance. And there are also new options to improve your dev server performance profile.</p>
<p>Vite 5 focuses on cleaning up the API (removing deprecated features) and streamlines several features closing long-standing issues, for example switching <code>define</code> to use proper AST replacements instead of regexes. We also continue to take steps to future-proof Vite (Node.js 18+ is now required, and <a href="/guide/migration.html#deprecate-cjs-node-api">the CJS Node API has been deprecated</a>).</p>
<p>Quick links:</p>
<ul>
<li><a href="/">Docs</a></li>
<li><a href="/guide/migration.html">Migration Guide</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#500-2023-11-16" target="_blank" rel="noreferrer">Changelog</a></li>
</ul>
<p>Docs in other languages:</p>
<ul>
<li><a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a></li>
<li><a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a></li>
<li><a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a></li>
<li><a href="https://pt.vite.dev/" target="_blank" rel="noreferrer">Português</a></li>
<li><a href="https://ko.vite.dev/" target="_blank" rel="noreferrer">한국어</a></li>
<li><a href="https://de.vite.dev/" target="_blank" rel="noreferrer">Deutsch</a> (new translation!)</li>
</ul>
<p>If you're new to Vite, we suggest reading first the <a href="/guide/">Getting Started</a> and <a href="/guide/features.html">Features</a> guides.</p>
<p>We appreciate the more than <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">850 contributors to Vite Core</a>, and the maintainers and contributors of Vite plugins, integrations, tools, and translations that have helped us reach here. We encourage you to get involved and continue to improve Vite with us. You can learn more at our <a href="https://github.com/vitejs/vite/blob/main/CONTRIBUTING.md" target="_blank" rel="noreferrer">Contributing Guide</a>. To get started, we recommend <a href="https://github.com/vitejs/vite/issues" target="_blank" rel="noreferrer">triaging issues</a>, <a href="https://github.com/vitejs/vite/pulls" target="_blank" rel="noreferrer">reviewing PRs</a>, sending failing tests PRs based on open issues, and helping others in <a href="https://github.com/vitejs/vite/discussions" target="_blank" rel="noreferrer">Discussions</a> and Vite Land's <a href="https://discord.com/channels/804011606160703521/1019670660856942652" target="_blank" rel="noreferrer">help forum</a>. You'll learn a lot along the way and have a smooth path to further contributions to the project. If you have doubts, join us on our <a href="http://chat.vite.dev/" target="_blank" rel="noreferrer">Discord community</a> and say hi on the <a href="https://discord.com/channels/804011606160703521/804439875226173480" target="_blank" rel="noreferrer">#contributing channel</a>.</p>
<p>To stay up to date, follow us on <a href="https://twitter.com/vite_js" target="_blank" rel="noreferrer">X</a> or <a href="https://webtoo.ls/@vite" target="_blank" rel="noreferrer">Mastodon</a>.</p>
<h2 id="quick-start-with-vite-5" tabindex="-1">Quick start with Vite 5 <a class="header-anchor" href="#quick-start-with-vite-5" aria-label="Permalink to &quot;Quick start with Vite 5&quot;">&ZeroWidthSpace;</a></h2>
<p>Use <code>pnpm create vite</code> to scaffold a Vite project with your preferred framework, or open a started template online to play with Vite 5 using <a href="https://vite.new" target="_blank" rel="noreferrer">vite.new</a>. You can also run <code>pnpm create vite-extra</code> to get access to templates from other frameworks and runtimes (Solid, Deno, SSR, and library starters). <code>create vite-extra</code> templates are also available when you run <code>create vite</code> under the <code>Others</code> option.</p>
<p>Note that Vite starter templates are intended to be used as a playground to test Vite with different frameworks. When building your next project, we recommend reaching out to the starters recommended by each framework. Some frameworks now redirect in <code>create vite</code> to their starters too (<code>create-vue</code> and <code>Nuxt 3</code> for Vue, and <code>SvelteKit</code> for Svelte).</p>
<h2 id="node-js-support" tabindex="-1">Node.js Support <a class="header-anchor" href="#node-js-support" aria-label="Permalink to &quot;Node.js Support&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite no longer supports Node.js 14 / 16 / 17 / 19, which reached its EOL. Node.js 18 / 20+ is now required.</p>
<h2 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">&ZeroWidthSpace;</a></h2>
<p>On top of Rollup 4's build performance improvements, there is a new guide to help you identify and fix common performance issues at <a href="/guide/performance.html">https://vite.dev/guide/performance</a>.</p>
<p>Vite 5 also introduces <a href="/guide/performance.html#warm-up-frequently-used-files">server.warmup</a>, a new feature to improve startup time. It lets you define a list of modules that should be pre-transformed as soon as the server starts. When using <a href="/config/server-options.html#server-open"><code>--open</code> or <code>server.open</code></a>, Vite will also automatically warm up the entry point of your app or the provided URL to open.</p>
<h2 id="main-changes" tabindex="-1">Main Changes <a class="header-anchor" href="#main-changes" aria-label="Permalink to &quot;Main Changes&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="/guide/migration.html#rollup-4">Vite is now powered by Rollup 4</a></li>
<li><a href="/guide/migration.html#deprecate-cjs-node-api">The CJS Node API has been deprecated</a></li>
<li><a href="/guide/migration.html#rework-define-and-import-meta-env-replacement-strategy">Rework <code>define</code> and <code>import.meta.env.*</code> replacement strategy</a></li>
<li><a href="/guide/migration.html#ssr-externalized-modules-value-now-matches-production">SSR externalized modules value now matches production</a></li>
<li><a href="/guide/migration.html#worker-plugins-is-now-a-function"><code>worker.plugins</code> is now a function</a></li>
<li><a href="/guide/migration.html#allow-path-containing-to-fallback-to-index-html">Allow path containing <code>.</code> to fallback to index.html</a></li>
<li><a href="/guide/migration.html#align-dev-and-preview-html-serving-behaviour">Align dev and preview HTML serving behavior</a></li>
<li><a href="/guide/migration.html#manifest-files-are-now-generated-in-vite-directory-by-default">Manifest files are now generated in <code>.vite</code> directory by default</a></li>
<li><a href="/guide/migration.html#cli-shortcuts-require-an-additional-enter-press">CLI shortcuts require an additional <code>Enter</code> press</a></li>
<li><a href="/guide/migration.html#update-experimentaldecorators-and-usedefineforclassfields-typescript-behaviour">Update <code>experimentalDecorators</code> and <code>useDefineForClassFields</code> TypeScript behavior</a></li>
<li><a href="/guide/migration.html#remove-https-flag-and-https-true">Remove <code>--https</code> flag and <code>https: true</code></a></li>
<li><a href="/guide/migration.html#remove-resolvepackageentry-and-resolvepackagedata-apis">Remove <code>resolvePackageEntry</code> and <code>resolvePackageData</code> APIs</a></li>
<li><a href="/guide/migration.html#removed-deprecated-apis">Removes previously deprecated APIs</a></li>
<li><a href="/guide/migration.html#advanced">Read more about advanced changes affecting plugin and tool authors</a></li>
</ul>
<h2 id="migrating-to-vite-5" tabindex="-1">Migrating to Vite 5 <a class="header-anchor" href="#migrating-to-vite-5" aria-label="Permalink to &quot;Migrating to Vite 5&quot;">&ZeroWidthSpace;</a></h2>
<p>We have worked with ecosystem partners to ensure a smooth migration to this new major. Once again, <a href="https://www.youtube.com/watch?v=7L4I4lDzO48" target="_blank" rel="noreferrer">vite-ecosystem-ci</a> has been crucial to help us make bolder changes while avoiding regressions. We're thrilled to see other ecosystems adopt similar schemes to improve the collaboration between their projects and downstream maintainers.</p>
<p>For most projects, the update to Vite 5 should be straight forward. But we advise reviewing the <a href="/guide/migration.html">detailed Migration Guide</a> before upgrading.</p>
<p>A low level breakdown with the full list of changes to Vite core can be found at the <a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#500-2023-11-16" target="_blank" rel="noreferrer">Vite 5 Changelog</a>.</p>
<h2 id="acknowledgments" tabindex="-1">Acknowledgments <a class="header-anchor" href="#acknowledgments" aria-label="Permalink to &quot;Acknowledgments&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 5 is the result of long hours of work by our community of contributors, downstream maintainers, plugins authors, and the <a href="/team.html">Vite Team</a>. A big shout out to <a href="https://twitter.com/bluwyoo" target="_blank" rel="noreferrer">Bjorn Lu</a> for leading the release process for this major.</p>
<p>We're also thankful to individuals and companies sponsoring Vite development. <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a>, <a href="https://nuxtlabs.com/" target="_blank" rel="noreferrer">Nuxt Labs</a>, and <a href="https://astro.build" target="_blank" rel="noreferrer">Astro</a> continue to invest in Vite by hiring Vite team members. A shout out to sponsors on <a href="https://github.com/sponsors/vitejs" target="_blank" rel="noreferrer">Vite's GitHub Sponsors</a>, <a href="https://opencollective.com/vite" target="_blank" rel="noreferrer">Vite's Open Collective</a>, and <a href="https://github.com/sponsors/yyx990803" target="_blank" rel="noreferrer">Evan You's GitHub Sponsors</a>. A special mention to <a href="https://remix.run/" target="_blank" rel="noreferrer">Remix</a> for becoming a Gold sponsor and contributing back after switching to Vite.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Binance 4.3 is out!]]></title>
            <link>https://vite.dev/blog/announcing-vite4-3.html</link>
            <guid>https://vite.dev/blog/announcing-vite4-3.html</guid>
            <pubDate>Thu, 20 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="vite-4-3-is-out" tabindex="-1">Vite 4.3 is out! <a class="header-anchor" href="#vite-4-3-is-out" aria-label="Permalink to &quot;Vite 4.3 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>April 20, 2023</em></p>
<p><img src="/og-image-announcing-vite4-3.png" alt="Vite 4.3 Announcement Cover Image"></p>
<p>Quick links:</p>
<ul>
<li>Docs: <a href="/">English</a>, <a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a>, <a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a>, <a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a>, <a href="https://pt.vite.dev/" target="_blank" rel="noreferrer">Português</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#430-2023-04-20" target="_blank" rel="noreferrer">Vite 4.3 Changelog</a></li>
</ul>
<h2 id="performance-improvements" tabindex="-1">Performance Improvements <a class="header-anchor" href="#performance-improvements" aria-label="Permalink to &quot;Performance Improvements&quot;">&ZeroWidthSpace;</a></h2>
<p>In this minor, we focused on improving the dev server performance. The resolve logic got streamlined, improving hot paths and implementing smarter caching for finding <code>package.json</code>, TS config files, and resolved URL in general.</p>
<p>You can read a detailed walkthrough of the performance work done in this blog post by one of Vite Contributors: <a href="https://sun0day.github.io/blog/vite/why-vite4_3-is-faster.html" target="_blank" rel="noreferrer">How we made Vite 4.3 faaaaster 🚀</a>.</p>
<p>This sprint resulted in speed improvements across the board compared to Vite 4.2.</p>
<p>These are the performance improvements as measured by <a href="https://github.com/sapphi-red/performance-compare" target="_blank" rel="noreferrer">sapphi-red/performance-compare</a>, which tests an app with 1000 React Components cold and warm dev server startup time as well as HMR times for a root and a leaf component:</p>
<p>| <strong>Vite (babel)</strong>   |  Vite 4.2 | Vite 4.3 | Improvement |
| :</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="vite-4-3-is-out" tabindex="-1">Vite 4.3 is out! <a class="header-anchor" href="#vite-4-3-is-out" aria-label="Permalink to &quot;Vite 4.3 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>April 20, 2023</em></p>
<p><img src="/og-image-announcing-vite4-3.png" alt="Vite 4.3 Announcement Cover Image"></p>
<p>Quick links:</p>
<ul>
<li>Docs: <a href="/">English</a>, <a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a>, <a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a>, <a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a>, <a href="https://pt.vite.dev/" target="_blank" rel="noreferrer">Português</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#430-2023-04-20" target="_blank" rel="noreferrer">Vite 4.3 Changelog</a></li>
</ul>
<h2 id="performance-improvements" tabindex="-1">Performance Improvements <a class="header-anchor" href="#performance-improvements" aria-label="Permalink to &quot;Performance Improvements&quot;">&ZeroWidthSpace;</a></h2>
<p>In this minor, we focused on improving the dev server performance. The resolve logic got streamlined, improving hot paths and implementing smarter caching for finding <code>package.json</code>, TS config files, and resolved URL in general.</p>
<p>You can read a detailed walkthrough of the performance work done in this blog post by one of Vite Contributors: <a href="https://sun0day.github.io/blog/vite/why-vite4_3-is-faster.html" target="_blank" rel="noreferrer">How we made Vite 4.3 faaaaster 🚀</a>.</p>
<p>This sprint resulted in speed improvements across the board compared to Vite 4.2.</p>
<p>These are the performance improvements as measured by <a href="https://github.com/sapphi-red/performance-compare" target="_blank" rel="noreferrer">sapphi-red/performance-compare</a>, which tests an app with 1000 React Components cold and warm dev server startup time as well as HMR times for a root and a leaf component:</p>
<table tabindex="0">
<thead>
<tr>
<th style="text-align:left"><strong>Vite (babel)</strong></th>
<th style="text-align:right">Vite 4.2</th>
<th style="text-align:right">Vite 4.3</th>
<th style="text-align:right">Improvement</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>dev cold start</strong></td>
<td style="text-align:right">17249.0ms</td>
<td style="text-align:right">5132.4ms</td>
<td style="text-align:right">-70.2%</td>
</tr>
<tr>
<td style="text-align:left"><strong>dev warm start</strong></td>
<td style="text-align:right">6027.8ms</td>
<td style="text-align:right">4536.1ms</td>
<td style="text-align:right">-24.7%</td>
</tr>
<tr>
<td style="text-align:left"><strong>Root HMR</strong></td>
<td style="text-align:right">46.8ms</td>
<td style="text-align:right">26.7ms</td>
<td style="text-align:right">-42.9%</td>
</tr>
<tr>
<td style="text-align:left"><strong>Leaf HMR</strong></td>
<td style="text-align:right">27.0ms</td>
<td style="text-align:right">12.9ms</td>
<td style="text-align:right">-52.2%</td>
</tr>
</tbody>
</table>
<table tabindex="0">
<thead>
<tr>
<th style="text-align:left"><strong>Vite (swc)</strong></th>
<th style="text-align:right">Vite 4.2</th>
<th style="text-align:right">Vite 4.3</th>
<th style="text-align:right">Improvement</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>dev cold start</strong></td>
<td style="text-align:right">13552.5ms</td>
<td style="text-align:right">3201.0ms</td>
<td style="text-align:right">-76.4%</td>
</tr>
<tr>
<td style="text-align:left"><strong>dev warm start</strong></td>
<td style="text-align:right">4625.5ms</td>
<td style="text-align:right">2834.4ms</td>
<td style="text-align:right">-38.7%</td>
</tr>
<tr>
<td style="text-align:left"><strong>Root HMR</strong></td>
<td style="text-align:right">30.5ms</td>
<td style="text-align:right">24.0ms</td>
<td style="text-align:right">-21.3%</td>
</tr>
<tr>
<td style="text-align:left"><strong>Leaf HMR</strong></td>
<td style="text-align:right">16.9ms</td>
<td style="text-align:right">10.0ms</td>
<td style="text-align:right">-40.8%</td>
</tr>
</tbody>
</table>
<p><img src="/vite4-3-startup-time.png" alt="Vite 4.3 vs 4.2 startup time comparison"></p>
<p><img src="/vite4-3-hmr-time.png" alt="Vite 4.3 vs 4.2 HMR time comparison"></p>
<p>You can read more information about the benchmark <a href="https://gist.github.com/sapphi-red/25be97327ee64a3c1dce793444afdf6e" target="_blank" rel="noreferrer">here</a>. Specs and Versions for this performance run:</p>
<ul>
<li>CPU: Ryzen 9 5900X, Memory: DDR4-3600 32GB, SSD: WD Blue SN550 NVME SSD</li>
<li>Windows 10 Pro 21H2 19044.2846</li>
<li>Node.js 18.16.0</li>
<li>Vite and React Plugin versions
<ul>
<li>Vite 4.2 (babel): Vite 4.2.1 + plugin-react 3.1.0</li>
<li>Vite 4.3 (babel): Vite 4.3.0 + plugin-react 4.0.0-beta.1</li>
<li>Vite 4.2 (swc): Vite 4.2.1 + plugin-react-swc 3.2.0</li>
<li>Vite 4.3 (swc): Vite 4.3.0 + plugin-react-swc 3.3.0</li>
</ul>
</li>
</ul>
<p>Early adopters have also reported seeing 1.5x-2x dev startup time improvement on real apps while testing the Vite 4.3 beta. We'd love to know the results for your apps.</p>
<h2 id="profiling" tabindex="-1">Profiling <a class="header-anchor" href="#profiling" aria-label="Permalink to &quot;Profiling&quot;">&ZeroWidthSpace;</a></h2>
<p>We'll continue to work on Vite's performance. We're working on an official <a href="https://github.com/vitejs/vite-benchmark" target="_blank" rel="noreferrer">Benchmark tool</a> for Vite that let us get performance metrics for each Pull Request.</p>
<p>And <a href="https://github.com/antfu/vite-plugin-inspect" target="_blank" rel="noreferrer">vite-plugin-inspect</a> now has more performance-related features to help you identify which plugins or middlewares are the bottleneck for your applications.</p>
<p>Using <code>vite --profile</code> (and then pressing <code>p</code>) once the page loads will save a CPU profile of the dev server startup. You can open them in an app as <a href="https://www.speedscope.app/" target="_blank" rel="noreferrer">speedscope</a> to identify performance issues. And you can share your findings with the Vite Team in a <a href="https://github.com/vitejs/vite/discussions" target="_blank" rel="noreferrer">Discussion</a> or in <a href="https://chat.vite.dev" target="_blank" rel="noreferrer">Vite's Discord</a>.</p>
<h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">&ZeroWidthSpace;</a></h2>
<p>We decided to do a single Vite Major this year aligning with the <a href="https://endoflife.date/nodejs" target="_blank" rel="noreferrer">EOL of Node.js 16</a> in September, dropping support for both Node.js 14 and 16 in it. If you would like to get involved, we started a <a href="https://github.com/vitejs/vite/discussions/12466" target="_blank" rel="noreferrer">Vite 5 Discussion</a> to gather early feedback.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Binance 4.0 is out!]]></title>
            <link>https://vite.dev/blog/announcing-vite4.html</link>
            <guid>https://vite.dev/blog/announcing-vite4.html</guid>
            <pubDate>Fri, 09 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="vite-4-0-is-out" tabindex="-1">Vite 4.0 is out! <a class="header-anchor" href="#vite-4-0-is-out" aria-label="Permalink to &quot;Vite 4.0 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>December 9, 2022</em> - Check out the <a href="./announcing-vite5.html">Vite 5.0 announcement</a></p>
<p>Vite 3 <a href="./announcing-vite3.html">was released</a> five months ago. npm downloads per week have gone from 1 million to 2.5 million since then. The ecosystem has matured too, and continues to grow. In this year's <a href="https://twitter.com/vite_js/status/1589665610119585793" target="_blank" rel="noreferrer">Jamstack Conf survey</a>, usage among the community jumped from 14% to 32% while keeping a high 9.7 satisfaction score. We saw the stable releases of <a href="https://astro.build/" target="_blank" rel="noreferrer">Astro 1.0</a>, <a href="https://v3.nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt 3</a>, and other Vite-powered frameworks that are innovating and collaborating: <a href="https://kit.svelte.dev/" target="_blank" rel="noreferrer">SvelteKit</a>, <a href="https://www.solidjs.com/blog/introducing-solidstart" target="_blank" rel="noreferrer">Solid Start</a>, <a href="https://qwik.builder.io/qwikcity/overview/" target="_blank" rel="noreferrer">Qwik City</a>. Storybook announced first-class support for Vite as one of its main features for <a href="https://storybook.js.org/blog/first-class-vite-support-in-storybook/" target="_blank" rel="noreferrer">Storybook 7.0</a>. Deno now <a href="https://www.youtube.com/watch?v=Zjojo9wdvmY" target="_blank" rel="noreferrer">supports Vite</a>. <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a> adoption is exploding, it will soon represent half of Vite's npm downloads. Nx is also investing in the ecosystem, and <a href="https://nx.dev/packages/vite" target="_blank" rel="noreferrer">officially supports Vite</a>.</p>
<p><a href="https://viteconf.org/2022/replay" target="_blank" rel="noreferrer"><img src="/ecosystem-vite4.png" alt="Vite 4 Ecosystem"></a></p>
<p>As a showcase of the growth Vite and related projects have experienced, the Vite ecosystem gathered on October 11th at <a href="https://viteconf.org/2022/replay" target="_blank" rel="noreferrer">ViteConf 2022</a>. We saw representatives from the main web framework and tools tell stories of innovation and collaboration. And in a symbolic move, the Rollup team choose that exact day to release <a href="https://rollupjs.org" target="_blank" rel="noreferrer">Rollup 3</a>.</p>
<p>Today, the Vite <a href="https://vite.dev/team" target="_blank" rel="noreferrer">team</a> with the help of our ecosystem partners, is happy to announce the release of Vite 4, powered during build time by Rollup 3. We've worked with the ecosystem to ensure a smooth upgrade path for this new major. Vite is now using <a href="https://github.com/vitejs/vite/issues/9870" target="_blank" rel="noreferrer">Rollup 3</a>, which allowed us to simplify Vite's internal asset handling and has many improvements. See the <a href="https://github.com/rollup/rollup/releases/tag/v3.0.0" target="_blank" rel="noreferrer">Rollup 3 release notes here</a>.</p>
<p><img src="/og-image-announcing-vite4.png" alt="Vite 4 Announcement Cover Image"></p>
<p>Quick links:</p>
<ul>
<li><a href="/">Docs</a></li>
<li><a href="https://v4.vite.dev/guide/migration.html" target="_blank" rel="noreferrer">Migration Guide</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#400-2022-12-09" target="_blank" rel="noreferrer">Changelog</a></li>
</ul>
<p>Docs in other languages:</p>
<ul>
<li><a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a></li>
<li><a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a></li>
<li><a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a></li>
</ul>
<p>If you recently started using Vite, we suggest reading the <a href="https://vite.dev/guide/why.html" target="_blank" rel="noreferrer">Why Vite Guide</a> and checking out <a href="https://vite.dev/guide/" target="_blank" rel="noreferrer">the Getting Started</a> and <a href="https://vite.dev/guide/features" target="_blank" rel="noreferrer">Features guide</a>. If you want to get involved, contributions are welcome at <a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">GitHub</a>. Almost <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">700 collaborators</a> have contributed to Vite. Follow the updates on <a href="https://twitter.com/vite_js" target="_blank" rel="noreferrer">Twitter</a> and <a href="https://webtoo.ls/@vite" target="_blank" rel="noreferrer">Mastodon</a>, or join collaborate with others on our <a href="http://chat.vite.dev/" target="_blank" rel="noreferrer">Discord community</a>.</p>
<h2 id="start-playing-with-vite-4" tabindex="-1">Start playing with Vite 4 <a class="header-anchor" href="#start-playing-with-vite-4" aria-label="Permalink to &quot;Start playing with Vite 4&quot;">&ZeroWidthSpace;</a></h2>
<p>Use <code>pnpm create vite</code> to scaffold a Vite project with your preferred framework, or open a started template online to play with Vite 4 using <a href="https://vite.new" target="_blank" rel="noreferrer">vite.new</a>.</p>
<p>You can also run <code>pnpm create vite-extra</code> to get access to templates from other frameworks and runtimes (Solid, Deno, SSR, and library starters). <code>create vite-extra</code> templates are also available when you run <code>create vite</code> under the <code>Others</code> option.</p>
<p>Note that Vite starter templates are intended to be used as a playground to test Vite with different frameworks. When building your next project, we recommend reaching out to the starters recommended by each framework. Some frameworks now redirect in <code>create vite</code> to their starters too (<code>create-vue</code> and <code>Nuxt 3</code> for Vue, and <code>SvelteKit</code> for Svelte).</p>
<h2 id="new-react-plugin-using-swc-during-development" tabindex="-1">New React plugin using SWC during development <a class="header-anchor" href="#new-react-plugin-using-swc-during-development" aria-label="Permalink to &quot;New React plugin using SWC during development&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://swc.rs/" target="_blank" rel="noreferrer">SWC</a> is now a mature replacement for <a href="https://babeljs.io/" target="_blank" rel="noreferrer">Babel</a>, especially in the context of React projects. SWC's React Fast Refresh implementation is a lot faster than Babel, and for some projects, it is now a better alternative. From Vite 4, two plugins are available for React projects with different tradeoffs. We believe that both approaches are worth supporting at this point, and we'll continue to explore improvements to both plugins in the future.</p>
<h3 id="vitejs-plugin-react" tabindex="-1">@vitejs/plugin-react <a class="header-anchor" href="#vitejs-plugin-react" aria-label="Permalink to &quot;@vitejs/plugin-react&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://github.com/vitejs/vite-plugin-react" target="_blank" rel="noreferrer">@vitejs/plugin-react</a> is a plugin that uses esbuild and Babel, achieving fast HMR with a small package footprint and the flexibility of being able to use the Babel transform pipeline.</p>
<h3 id="vitejs-plugin-react-swc-new" tabindex="-1">@vitejs/plugin-react-swc (new) <a class="header-anchor" href="#vitejs-plugin-react-swc-new" aria-label="Permalink to &quot;@vitejs/plugin-react-swc (new)&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://github.com/vitejs/vite-plugin-react-swc" target="_blank" rel="noreferrer">@vitejs/plugin-react-swc</a> is a new plugin that uses esbuild during build, but replaces Babel with SWC during development. For big projects that don't require non-standard React extensions, cold start and Hot Module Replacement (HMR) can be significantly faster.</p>
<h2 id="browser-compatibility" tabindex="-1">Browser Compatibility <a class="header-anchor" href="#browser-compatibility" aria-label="Permalink to &quot;Browser Compatibility&quot;">&ZeroWidthSpace;</a></h2>
<p>The modern browser build now targets <code>safari14</code> by default for wider ES2020 compatibility. This means that modern builds can now use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer"><code>BigInt</code></a> and that the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing" target="_blank" rel="noreferrer">nullish coalescing operator</a> isn't transpiled anymore. If you need to support older browsers, you can add <a href="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" target="_blank" rel="noreferrer"><code>@vitejs/plugin-legacy</code></a> as usual.</p>
<h2 id="importing-css-as-a-string" tabindex="-1">Importing CSS as a String <a class="header-anchor" href="#importing-css-as-a-string" aria-label="Permalink to &quot;Importing CSS as a String&quot;">&ZeroWidthSpace;</a></h2>
<p>In Vite 3, importing the default export of a <code>.css</code> file could introduce a double loading of CSS.</p>
<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> cssString </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> './global.css'</span></span></code></pre>
</div><p>This double loading could occur since a <code>.css</code> file will be emitted and it's likely that the CSS string will also be used by the application code — for example, injected by the framework runtime. From Vite 4, the <code>.css</code> default export <a href="https://github.com/vitejs/vite/issues/11094" target="_blank" rel="noreferrer">has been deprecated</a>. The <code>?inline</code> query suffix modifier needs to be used in this case, as that doesn't emit the imported <code>.css</code> styles.</p>
<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> stuff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> './global.css?inline'</span></span></code></pre>
</div><p>Learn more in the <a href="https://v4.vite.dev/guide/migration.html" target="_blank" rel="noreferrer">Migration Guide</a>.</p>
<h2 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite now uses <code>dotenv</code> 16 and <code>dotenv-expand</code> 9 (previously <code>dotenv</code> 14 and <code>dotenv-expand</code> 5). If you have a value including <code>#</code> or <code>`</code>, you will need to wrap them with quotes.</p>
<div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7">-VITE_APP=ab#cd`ef</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">+VITE_APP="ab#cd`ef"</span></span></code></pre>
</div><p>For more details, see the <a href="https://github.com/motdotla/dotenv/blob/master/CHANGELOG.md" target="_blank" rel="noreferrer"><code>dotenv</code></a> and <a href="https://github.com/motdotla/dotenv-expand/blob/master/CHANGELOG.md" target="_blank" rel="noreferrer"><code>dotenv-expand</code> changelog</a>.</p>
<h2 id="other-features" tabindex="-1">Other Features <a class="header-anchor" href="#other-features" aria-label="Permalink to &quot;Other Features&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>CLI Shortcuts (press <code>h</code> during dev to see them all) (<a href="https://github.com/vitejs/vite/pull/11228" target="_blank" rel="noreferrer">#11228</a>)</li>
<li>Support for patch-package when pre bundling dependencies (<a href="https://github.com/vitejs/vite/issues/10286" target="_blank" rel="noreferrer">#10286</a>)</li>
<li>Cleaner build logs output (<a href="https://github.com/vitejs/vite/issues/10895" target="_blank" rel="noreferrer">#10895</a>) and switch to <code>kB</code> to align with browser dev tools (<a href="https://github.com/vitejs/vite/issues/10982" target="_blank" rel="noreferrer">#10982</a>)</li>
<li>Improved error messages during SSR (<a href="https://github.com/vitejs/vite/issues/11156" target="_blank" rel="noreferrer">#11156</a>)</li>
</ul>
<h2 id="reduced-package-size" tabindex="-1">Reduced Package Size <a class="header-anchor" href="#reduced-package-size" aria-label="Permalink to &quot;Reduced Package Size&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite cares about its footprint, to speed up installation, especially in the use case of playgrounds for documentation and reproductions. And once more, this major brings improvements in Vite's package size. Vite 4 install size is 23% smaller compared to vite 3.2.5 (14.1 MB vs 18.3 MB).</p>
<h2 id="upgrades-to-vite-core" tabindex="-1">Upgrades to Vite Core <a class="header-anchor" href="#upgrades-to-vite-core" aria-label="Permalink to &quot;Upgrades to Vite Core&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">Vite Core</a> and <a href="https://github.com/vitejs/vite-ecosystem-ci" target="_blank" rel="noreferrer">vite-ecosystem-ci</a> continue to evolve to provide a better experience to maintainers and collaborators and to ensure that Vite development scales to cope with the growth in the ecosystem.</p>
<h3 id="framework-plugins-out-of-core" tabindex="-1">Framework plugins out of core <a class="header-anchor" href="#framework-plugins-out-of-core" aria-label="Permalink to &quot;Framework plugins out of core&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://github.com/vitejs/vite-plugin-vue" target="_blank" rel="noreferrer"><code>@vitejs/plugin-vue</code></a> and <a href="https://github.com/vitejs/vite-plugin-react" target="_blank" rel="noreferrer"><code>@vitejs/plugin-react</code></a> have been part of Vite core monorepo since the first versions of Vite. This helped us to get a close feedback loop when making changes as we were getting both Core and the plugins tested and released together. With <a href="https://github.com/vitejs/vite-ecosystem-ci" target="_blank" rel="noreferrer">vite-ecosystem-ci</a> we can get this feedback with these plugins developed on independent repositories, so from Vite 4, <a href="https://github.com/vitejs/vite/pull/11158" target="_blank" rel="noreferrer">they have been moved out of the Vite core monorepo</a>. This is meaningful for Vite's framework-agnostic story and will allow us to build independent teams to maintain each of the plugins. If you have bugs to report or features to request, please create issues on the new repositories moving forward: <a href="https://github.com/vitejs/vite-plugin-vue" target="_blank" rel="noreferrer"><code>vitejs/vite-plugin-vue</code></a> and <a href="https://github.com/vitejs/vite-plugin-react" target="_blank" rel="noreferrer"><code>vitejs/vite-plugin-react</code></a>.</p>
<h3 id="vite-ecosystem-ci-improvements" tabindex="-1">vite-ecosystem-ci improvements <a class="header-anchor" href="#vite-ecosystem-ci-improvements" aria-label="Permalink to &quot;vite-ecosystem-ci improvements&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://github.com/vitejs/vite-ecosystem-ci" target="_blank" rel="noreferrer">vite-ecosystem-ci</a> extends Vite's CI by providing on-demand status reports on the state of the CIs of <a href="https://github.com/vitejs/vite-ecosystem-ci/tree/main/tests" target="_blank" rel="noreferrer">most major downstream projects</a>. We run vite-ecosystem-ci three times a week against Vite's main branch and receive timely reports before introducing a regression. Vite 4 will soon be compatible with most projects using Vite, which already prepared branches with the needed changes and will be releasing them in the next few days. We are also able to run vite-ecosystem-ci on-demand on PRs using <code>/ecosystem-ci run</code> in a comment, allowing us to know <a href="https://github.com/vitejs/vite/pull/11269#issuecomment-1343365064" target="_blank" rel="noreferrer">the effect of changes</a> before they hit main.</p>
<h2 id="acknowledgments" tabindex="-1">Acknowledgments <a class="header-anchor" href="#acknowledgments" aria-label="Permalink to &quot;Acknowledgments&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 4 wouldn't be possible without uncountable hours of work by Vite contributors, many of them maintainers of downstream projects and plugins, and the efforts of the <a href="/team.html">Vite Team</a>. All of us have worked together to improve Vite's DX once more, for every framework and app using it. We're grateful to be able to improve a common base for such a vibrant ecosystem.</p>
<p>We're also thankful to individuals and companies sponsoring the Vite team, and companies investing directly in Vite's future: <a href="https://twitter.com/antfu7" target="_blank" rel="noreferrer">@antfu7</a>'s work on Vite and the ecosystem is part of his job at <a href="https://nuxtlabs.com/" target="_blank" rel="noreferrer">Nuxt Labs</a>, <a href="https://astro.build" target="_blank" rel="noreferrer">Astro</a> is funding <a href="https://twitter.com/bluwyoo" target="_blank" rel="noreferrer">@bluwyoo</a>'s' Vite core work, and <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a> hires <a href="https://twitter.com/patak_dev" target="_blank" rel="noreferrer">@patak_dev</a> to work full time on Vite.</p>
<h2 id="next-steps" tabindex="-1">Next steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next steps&quot;">&ZeroWidthSpace;</a></h2>
<p>Our immediate focus would be on triaging newly opened issues to avoid disruption by possible regressions. If you would like to get involved and help us improve Vite, we suggest starting with issues triaging. Join <a href="https://chat.vite.dev" target="_blank" rel="noreferrer">our Discord</a> and reach out on the <code>#contributing</code> channel. Polish our <code>#docs</code> story, and <code>#help</code> others. We need to continue to build a helpful and welcoming community for the next wave of users, as Vite's adoption continues to grow.</p>
<p>There are a lot of open fronts to keep improving the DX of everyone that has chosen Vite to power their frameworks and develop their apps. Onwards!</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Binance 3.0 is out!]]></title>
            <link>https://vite.dev/blog/announcing-vite3.html</link>
            <guid>https://vite.dev/blog/announcing-vite3.html</guid>
            <pubDate>Sat, 23 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="vite-3-0-is-out" tabindex="-1">Vite 3.0 is out! <a class="header-anchor" href="#vite-3-0-is-out" aria-label="Permalink to &quot;Vite 3.0 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>July 23, 2022</em> - Check out the <a href="./announcing-vite4.html">Vite 4.0 announcement</a></p>
<p>In February last year, <a href="https://twitter.com/youyuxi" target="_blank" rel="noreferrer">Evan You</a> released Vite 2. Since then, its adoption has grown non-stop, reaching more than 1 million npm downloads per week. A sprawling ecosystem rapidly formed after the release. Vite is powering a renewed innovation race in Web frameworks. <a href="https://v3.nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt 3</a> uses Vite by default. <a href="https://kit.svelte.dev/" target="_blank" rel="noreferrer">SvelteKit</a>, <a href="https://astro.build/" target="_blank" rel="noreferrer">Astro</a>, <a href="https://hydrogen.shopify.dev/" target="_blank" rel="noreferrer">Hydrogen</a>, and <a href="https://docs.solidjs.com/quick-start" target="_blank" rel="noreferrer">SolidStart</a> are all built with Vite. <a href="https://laravel.com/docs/9.x/vite" target="_blank" rel="noreferrer">Laravel has now decided to use Vite by default</a>. <a href="https://vite-ruby.netlify.app/" target="_blank" rel="noreferrer">Vite Ruby</a> shows how Vite can improve Rails DX. <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a> is making strides as a Vite-native alternative to Jest. Vite is behind <a href="https://docs.cypress.io/guides/component-testing/writing-your-first-component-test" target="_blank" rel="noreferrer">Cypress</a> and <a href="https://playwright.dev/docs/test-components" target="_blank" rel="noreferrer">Playwright</a>'s new Component Testing features, Storybook has <a href="https://github.com/storybookjs/builder-vite" target="_blank" rel="noreferrer">Vite as an official builder</a>. And <a href="https://patak.dev/vite/ecosystem.html" target="_blank" rel="noreferrer">the list goes on</a>. Maintainers from most of these projects got involved in improving the Vite core itself, working closely with the Vite <a href="https://vite.dev/team" target="_blank" rel="noreferrer">team</a> and other contributors.</p>
<p><img src="/og-image-announcing-vite3.png" alt="Vite 3 Announcement Cover Image"></p>
<p>Today, 16 months from the v2 launch we are happy to announce the release of Vite 3. We decided to release a new Vite major at least every year to align with <a href="https://nodejs.org/en/about/releases/" target="_blank" rel="noreferrer">Node.js's EOL</a>, and take the opportunity to review Vite's API regularly with a short migration path for projects in the ecosystem.</p>
<p>Quick links:</p>
<ul>
<li><a href="/">Docs</a></li>
<li><a href="https://v3.vite.dev/guide/migration.html" target="_blank" rel="noreferrer">Migration Guide</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#300-2022-07-13" target="_blank" rel="noreferrer">Changelog</a></li>
</ul>
<p>If you are new to Vite, we recommend reading the <a href="https://vite.dev/guide/why.html" target="_blank" rel="noreferrer">Why Vite Guide</a>. Then check out <a href="https://vite.dev/guide/" target="_blank" rel="noreferrer">the Getting Started</a> and <a href="https://vite.dev/guide/features" target="_blank" rel="noreferrer">Features guide</a> to see what Vite provides out of the box. As usual, contributions are welcome at <a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">GitHub</a>. More than <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">600 collaborators</a> have helped improve Vite so far. Follow the updates on <a href="https://twitter.com/vite_js" target="_blank" rel="noreferrer">Twitter</a>, or join discussions with other Vite users on our <a href="http://chat.vite.dev/" target="_blank" rel="noreferrer">Discord chat server</a>.</p>
<h2 id="new-documentation" tabindex="-1">New Documentation <a class="header-anchor" href="#new-documentation" aria-label="Permalink to &quot;New Documentation&quot;">&ZeroWidthSpace;</a></h2>
<p>Go to <a href="https://vite.dev" target="_blank" rel="noreferrer">vite.dev</a> to enjoy the new v3 docs. Vite is now using the new <a href="https://vitepress.vuejs.org" target="_blank" rel="noreferrer">VitePress</a> default theme, with a stunning dark mode between other features.</p>
<p><a href="https://vite.dev" target="_blank" rel="noreferrer"><img src="./../images/v3-docs.png" alt="Vite documentation frontpage"></a></p>
<p>Several projects in the ecosystem have already migrated to it (see <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a>, <a href="https://vite-plugin-pwa.netlify.app/" target="_blank" rel="noreferrer">vite-plugin-pwa</a>, and <a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a> itself).</p>
<p>If you need to access the Vite 2 docs, they will remain online at <a href="https://v2.vite.dev" target="_blank" rel="noreferrer">v2.vite.dev</a>. There is also a new <a href="https://main.vite.dev" target="_blank" rel="noreferrer">main.vite.dev</a> subdomain, where each commit to Vite’s main branch is auto deployed. This is useful when testing beta versions or contributing to the core’s development.</p>
<p>There is also now an official Spanish translation, that has been added to the previous Chinese and Japanese translations:</p>
<ul>
<li><a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a></li>
<li><a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a></li>
<li><a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a></li>
</ul>
<h2 id="create-vite-starter-templates" tabindex="-1">Create Vite Starter Templates <a class="header-anchor" href="#create-vite-starter-templates" aria-label="Permalink to &quot;Create Vite Starter Templates&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="/guide/#trying-vite-online">create-vite</a> templates have been a great tool to quickly test Vite with your favorite framework. In Vite 3, all of the templates got a new theme in line with the new docs. Open them online and start playing with Vite 3 now:</p>
<div class="stackblitz-links">
<a target="_blank" href="https://vite.new"><img width="75" height="75" src="../images/vite.svg" alt="Vite logo"></a>
<a target="_blank" href="https://vite.new/vue"><img width="75" height="75" src="../images/vue.svg" alt="Vue logo"></a>
<a target="_blank" href="https://vite.new/svelte"><img width="60" height="60" src="../images/svelte.svg" alt="Svelte logo"></a>
<a target="_blank" href="https://vite.new/react"><img width="75" height="75" src="../images/react.svg" alt="React logo"></a>
<a target="_blank" href="https://vite.new/preact"><img width="65" height="65" src="../images/preact.svg" alt="Preact logo"></a>
<a target="_blank" href="https://vite.new/lit"><img width="60" height="60" src="../images/lit.svg" alt="Lit logo"></a>
</div>
<p>The theme is now shared by all templates. This should help better convey the scope for these starters as minimal templates to get started with Vite. For more complete solutions including linting, testing setup, and other features, there are official Vite-powered templates for some frameworks like <a href="https://github.com/vuejs/create-vue" target="_blank" rel="noreferrer">create-vue</a> and <a href="https://github.com/sveltejs/kit" target="_blank" rel="noreferrer">create-svelte</a>. There is a community-maintained list of templates at <a href="https://github.com/vitejs/awesome-vite#templates" target="_blank" rel="noreferrer">Awesome Vite</a>.</p>
<h2 id="dev-improvements" tabindex="-1">Dev Improvements <a class="header-anchor" href="#dev-improvements" aria-label="Permalink to &quot;Dev Improvements&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="vite-cli" tabindex="-1">Vite CLI <a class="header-anchor" href="#vite-cli" aria-label="Permalink to &quot;Vite CLI&quot;">&ZeroWidthSpace;</a></h3>
<pre style="background-color: var(--vp-code-block-bg);padding:2em;border-radius:8px;max-width:100%;overflow-x:auto;">
  <span style="color:lightgreen"><b>VITE</b></span> <span style="color:lightgreen">v3.0.0</span>  <span style="color:gray">ready in <b>320</b> ms</span>

  <span style="color:lightgreen"><b>➜</b></span>  <span style="color:white"><b>Local</b>:</span>   <span style="color:cyan">http://127.0.0.1:5173/</span>
  <span style="color:green"><b>➜</b></span>  <span style="color:gray"><b>Network</b>: use --host to expose</span>
</pre>
<p>Apart from the CLI’s aesthetics improvements, you’ll notice that the default dev server port is now 5173 and the preview server listening at 4173. This change ensures Vite will avoid collisions with other tools.</p>
<h3 id="improved-websocket-connection-strategy" tabindex="-1">Improved WebSocket Connection Strategy <a class="header-anchor" href="#improved-websocket-connection-strategy" aria-label="Permalink to &quot;Improved WebSocket Connection Strategy&quot;">&ZeroWidthSpace;</a></h3>
<p>One of the pain points of Vite 2 was configuring the server when running behind a proxy. Vite 3 changes the default connection scheme so it works out of the box in most scenarios. All these setups are now tested as part of the Vite Ecosystem CI through <a href="https://github.com/sapphi-red/vite-setup-catalogue" target="_blank" rel="noreferrer"><code>vite-setup-catalogue</code></a>.</p>
<h3 id="cold-start-improvements" tabindex="-1">Cold Start Improvements <a class="header-anchor" href="#cold-start-improvements" aria-label="Permalink to &quot;Cold Start Improvements&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite now avoids full reload during cold start when imports are injected by plugins while crawling the initial statically imported modules (<a href="https://github.com/vitejs/vite/issues/8869" target="_blank" rel="noreferrer">#8869</a>).</p>
<details>
  <summary><b>Click to learn more</b></summary>
<p>In Vite 2.9, both the scanner and optimizer were run in the background. In the best scenario, where the scanner would find every dependency, no reload was needed in cold start. But if the scanner missed a dependency, a new optimization phase and then a reload were needed. Vite was able to avoid some of these reloads in v2.9, as we detected if the new optimized chunks were compatible with the ones the browser had. But if there was a common dep, the sub-chunks could change and a reload was required to avoid duplicated state. In Vite 3, the optimized deps aren't handed to the browser until the crawling of static imports is done. A quick optimization phase is issued if there is a missing dep (for example, injected by a plugin), and only then, the bundled deps are sent. So, a page reload is no longer needed for these cases.</p>
</details>
<img style="background-color: var(--vp-code-block-bg);padding:4%;border-radius:8px;" width="100%" height="auto" src="../images/vite-3-cold-start.svg" alt="Two graphs comparing Vite 2.9 and Vite 3 optimization strategy">
<h3 id="import-meta-glob" tabindex="-1">import.meta.glob <a class="header-anchor" href="#import-meta-glob" aria-label="Permalink to &quot;import.meta.glob&quot;">&ZeroWidthSpace;</a></h3>
<p><code>import.meta.glob</code> support was rewritten. Read about the new features in the <a href="/guide/features.html#glob-import">Glob Import Guide</a>:</p>
<p><a href="/guide/features.html#multiple-patterns">Multiple Patterns</a> can be passed as an array</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./another/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span></code></pre>
</div><p><a href="/guide/features.html#negative-patterns">Negative Patterns</a> are now supported (prefixed with <code>!</code>) to ignore some specific files</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'!**/bar.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span></code></pre>
</div><p><a href="/guide/features.html#named-imports">Named Imports</a> can be specified to improve tree-shaking</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, { import: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'setup'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> })</span></span></code></pre>
</div><p><a href="/guide/features.html#custom-queries">Custom Queries</a> can be passed to attach metadata</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, { query: { custom: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'data'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> } })</span></span></code></pre>
</div><p><a href="/guide/features.html#glob-import">Eager Imports</a> is now passed as a flag</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, { eager: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> })</span></span></code></pre>
</div><h3 id="aligning-wasm-import-with-future-standards" tabindex="-1">Aligning WASM Import with Future Standards <a class="header-anchor" href="#aligning-wasm-import-with-future-standards" aria-label="Permalink to &quot;Aligning WASM Import with Future Standards&quot;">&ZeroWidthSpace;</a></h3>
<p>The WebAssembly import API has been revised to avoid collisions with future standards and to make it more flexible:</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> './example.wasm?init'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  instance.exports.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">})</span></span></code></pre>
</div><p>Learn more in the <a href="/guide/features.html#webassembly">WebAssembly guide</a></p>
<h2 id="build-improvements" tabindex="-1">Build Improvements <a class="header-anchor" href="#build-improvements" aria-label="Permalink to &quot;Build Improvements&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="esm-ssr-build-by-default" tabindex="-1">ESM SSR Build by Default <a class="header-anchor" href="#esm-ssr-build-by-default" aria-label="Permalink to &quot;ESM SSR Build by Default&quot;">&ZeroWidthSpace;</a></h3>
<p>Most SSR frameworks in the ecosystem were already using ESM builds. So, Vite 3 makes ESM the default format for SSR builds. This allows us to streamline previous <a href="https://vite.dev/guide/ssr.html#ssr-externals" target="_blank" rel="noreferrer">SSR externalization heuristics</a>, externalizing dependencies by default.</p>
<h3 id="improved-relative-base-support" tabindex="-1">Improved Relative Base Support <a class="header-anchor" href="#improved-relative-base-support" aria-label="Permalink to &quot;Improved Relative Base Support&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite 3 now properly supports relative base (using <code>base: ''</code>), allowing built assets to be deployed to different bases without re-building. This is useful when the base isn't known at build time, for example when deploying to content-addressable networks like <a href="https://ipfs.io/" target="_blank" rel="noreferrer">IPFS</a>.</p>
<h2 id="experimental-features" tabindex="-1">Experimental Features <a class="header-anchor" href="#experimental-features" aria-label="Permalink to &quot;Experimental Features&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="built-asset-paths-fine-grained-control-experimental" tabindex="-1">Built Asset Paths fine-grained Control (Experimental) <a class="header-anchor" href="#built-asset-paths-fine-grained-control-experimental" aria-label="Permalink to &quot;Built Asset Paths fine-grained Control (Experimental)&quot;">&ZeroWidthSpace;</a></h3>
<p>There are other deploy scenarios where this isn't enough. For example, if the generated hashed assets need to be deployed to a different CDN from the public files, then finer-grained control is required over path generation at build time. Vite 3 provides an experimental API to modify the built file paths. Check <a href="/guide/build.html#advanced-base-options">Build Advanced Base Options</a> for more information.</p>
<h3 id="esbuild-deps-optimization-at-build-time-experimental" tabindex="-1">Esbuild Deps Optimization at Build Time (Experimental) <a class="header-anchor" href="#esbuild-deps-optimization-at-build-time-experimental" aria-label="Permalink to &quot;Esbuild Deps Optimization at Build Time (Experimental)&quot;">&ZeroWidthSpace;</a></h3>
<p>One of the main differences between dev and build time is how Vite handles dependencies. During build time, <a href="https://github.com/rollup/plugins/tree/master/packages/commonjs" target="_blank" rel="noreferrer"><code>@rollup/plugin-commonjs</code></a> is used to allow importing CJS only dependencies (like React). When using the dev server, esbuild is used instead to pre-bundle and optimize dependencies, and an inline interop scheme is applied while transforming user code importing CJS deps. During the development of Vite 3, we introduced the changes needed to also allow the use of <a href="https://v3.vite.dev/guide/migration.html#using-esbuild-deps-optimization-at-build-time" target="_blank" rel="noreferrer">esbuild to optimize dependencies during build time</a>. <a href="https://github.com/rollup/plugins/tree/master/packages/commonjs" target="_blank" rel="noreferrer"><code>@rollup/plugin-commonjs</code></a> can then be avoided, making dev and build time work in the same way.</p>
<p>Given that Rollup v3 will be out in the next months, and we're going to follow up with another Vite major, we've decided to make this mode optional to reduce v3 scope and give Vite and the ecosystem more time to work out possible issues with the new CJS interop approach during build time. Frameworks may switch to using esbuild deps optimization during build time by default at their own pace before Vite 4.</p>
<h3 id="hmr-partial-accept-experimental" tabindex="-1">HMR Partial Accept (Experimental) <a class="header-anchor" href="#hmr-partial-accept-experimental" aria-label="Permalink to &quot;HMR Partial Accept (Experimental)&quot;">&ZeroWidthSpace;</a></h3>
<p>There is opt-in support for <a href="https://github.com/vitejs/vite/pull/7324" target="_blank" rel="noreferrer">HMR Partial Accept</a>. This feature could unlock finer-grained HMR for framework components that export several bindings in the same module. You can learn more at <a href="https://github.com/vitejs/vite/discussions/7309" target="_blank" rel="noreferrer">the discussion for this proposal</a>.</p>
<h2 id="bundle-size-reduction" tabindex="-1">Bundle Size Reduction <a class="header-anchor" href="#bundle-size-reduction" aria-label="Permalink to &quot;Bundle Size Reduction&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite cares about its publish and install footprint; a fast installation of a new app is a feature. Vite bundles most of its dependencies and tries to use modern lightweight alternatives where possible. Continuing with this ongoing goal, Vite 3 publish size is 30% smaller than v2.</p>
<p>|             | Publish Size | Install Size |
|</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="vite-3-0-is-out" tabindex="-1">Vite 3.0 is out! <a class="header-anchor" href="#vite-3-0-is-out" aria-label="Permalink to &quot;Vite 3.0 is out!&quot;">&ZeroWidthSpace;</a></h1>
<p><em>July 23, 2022</em> - Check out the <a href="./announcing-vite4.html">Vite 4.0 announcement</a></p>
<p>In February last year, <a href="https://twitter.com/youyuxi" target="_blank" rel="noreferrer">Evan You</a> released Vite 2. Since then, its adoption has grown non-stop, reaching more than 1 million npm downloads per week. A sprawling ecosystem rapidly formed after the release. Vite is powering a renewed innovation race in Web frameworks. <a href="https://v3.nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt 3</a> uses Vite by default. <a href="https://kit.svelte.dev/" target="_blank" rel="noreferrer">SvelteKit</a>, <a href="https://astro.build/" target="_blank" rel="noreferrer">Astro</a>, <a href="https://hydrogen.shopify.dev/" target="_blank" rel="noreferrer">Hydrogen</a>, and <a href="https://docs.solidjs.com/quick-start" target="_blank" rel="noreferrer">SolidStart</a> are all built with Vite. <a href="https://laravel.com/docs/9.x/vite" target="_blank" rel="noreferrer">Laravel has now decided to use Vite by default</a>. <a href="https://vite-ruby.netlify.app/" target="_blank" rel="noreferrer">Vite Ruby</a> shows how Vite can improve Rails DX. <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a> is making strides as a Vite-native alternative to Jest. Vite is behind <a href="https://docs.cypress.io/guides/component-testing/writing-your-first-component-test" target="_blank" rel="noreferrer">Cypress</a> and <a href="https://playwright.dev/docs/test-components" target="_blank" rel="noreferrer">Playwright</a>'s new Component Testing features, Storybook has <a href="https://github.com/storybookjs/builder-vite" target="_blank" rel="noreferrer">Vite as an official builder</a>. And <a href="https://patak.dev/vite/ecosystem.html" target="_blank" rel="noreferrer">the list goes on</a>. Maintainers from most of these projects got involved in improving the Vite core itself, working closely with the Vite <a href="https://vite.dev/team" target="_blank" rel="noreferrer">team</a> and other contributors.</p>
<p><img src="/og-image-announcing-vite3.png" alt="Vite 3 Announcement Cover Image"></p>
<p>Today, 16 months from the v2 launch we are happy to announce the release of Vite 3. We decided to release a new Vite major at least every year to align with <a href="https://nodejs.org/en/about/releases/" target="_blank" rel="noreferrer">Node.js's EOL</a>, and take the opportunity to review Vite's API regularly with a short migration path for projects in the ecosystem.</p>
<p>Quick links:</p>
<ul>
<li><a href="/">Docs</a></li>
<li><a href="https://v3.vite.dev/guide/migration.html" target="_blank" rel="noreferrer">Migration Guide</a></li>
<li><a href="https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md#300-2022-07-13" target="_blank" rel="noreferrer">Changelog</a></li>
</ul>
<p>If you are new to Vite, we recommend reading the <a href="https://vite.dev/guide/why.html" target="_blank" rel="noreferrer">Why Vite Guide</a>. Then check out <a href="https://vite.dev/guide/" target="_blank" rel="noreferrer">the Getting Started</a> and <a href="https://vite.dev/guide/features" target="_blank" rel="noreferrer">Features guide</a> to see what Vite provides out of the box. As usual, contributions are welcome at <a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">GitHub</a>. More than <a href="https://github.com/vitejs/vite/graphs/contributors" target="_blank" rel="noreferrer">600 collaborators</a> have helped improve Vite so far. Follow the updates on <a href="https://twitter.com/vite_js" target="_blank" rel="noreferrer">Twitter</a>, or join discussions with other Vite users on our <a href="http://chat.vite.dev/" target="_blank" rel="noreferrer">Discord chat server</a>.</p>
<h2 id="new-documentation" tabindex="-1">New Documentation <a class="header-anchor" href="#new-documentation" aria-label="Permalink to &quot;New Documentation&quot;">&ZeroWidthSpace;</a></h2>
<p>Go to <a href="https://vite.dev" target="_blank" rel="noreferrer">vite.dev</a> to enjoy the new v3 docs. Vite is now using the new <a href="https://vitepress.vuejs.org" target="_blank" rel="noreferrer">VitePress</a> default theme, with a stunning dark mode between other features.</p>
<p><a href="https://vite.dev" target="_blank" rel="noreferrer"><img src="./../images/v3-docs.png" alt="Vite documentation frontpage"></a></p>
<p>Several projects in the ecosystem have already migrated to it (see <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a>, <a href="https://vite-plugin-pwa.netlify.app/" target="_blank" rel="noreferrer">vite-plugin-pwa</a>, and <a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a> itself).</p>
<p>If you need to access the Vite 2 docs, they will remain online at <a href="https://v2.vite.dev" target="_blank" rel="noreferrer">v2.vite.dev</a>. There is also a new <a href="https://main.vite.dev" target="_blank" rel="noreferrer">main.vite.dev</a> subdomain, where each commit to Vite’s main branch is auto deployed. This is useful when testing beta versions or contributing to the core’s development.</p>
<p>There is also now an official Spanish translation, that has been added to the previous Chinese and Japanese translations:</p>
<ul>
<li><a href="https://cn.vite.dev/" target="_blank" rel="noreferrer">简体中文</a></li>
<li><a href="https://ja.vite.dev/" target="_blank" rel="noreferrer">日本語</a></li>
<li><a href="https://es.vite.dev/" target="_blank" rel="noreferrer">Español</a></li>
</ul>
<h2 id="create-vite-starter-templates" tabindex="-1">Create Vite Starter Templates <a class="header-anchor" href="#create-vite-starter-templates" aria-label="Permalink to &quot;Create Vite Starter Templates&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="/guide/#trying-vite-online">create-vite</a> templates have been a great tool to quickly test Vite with your favorite framework. In Vite 3, all of the templates got a new theme in line with the new docs. Open them online and start playing with Vite 3 now:</p>
<div class="stackblitz-links">
<a target="_blank" href="https://vite.new"><img width="75" height="75" src="../images/vite.svg" alt="Vite logo"></a>
<a target="_blank" href="https://vite.new/vue"><img width="75" height="75" src="../images/vue.svg" alt="Vue logo"></a>
<a target="_blank" href="https://vite.new/svelte"><img width="60" height="60" src="../images/svelte.svg" alt="Svelte logo"></a>
<a target="_blank" href="https://vite.new/react"><img width="75" height="75" src="../images/react.svg" alt="React logo"></a>
<a target="_blank" href="https://vite.new/preact"><img width="65" height="65" src="../images/preact.svg" alt="Preact logo"></a>
<a target="_blank" href="https://vite.new/lit"><img width="60" height="60" src="../images/lit.svg" alt="Lit logo"></a>
</div>
<p>The theme is now shared by all templates. This should help better convey the scope for these starters as minimal templates to get started with Vite. For more complete solutions including linting, testing setup, and other features, there are official Vite-powered templates for some frameworks like <a href="https://github.com/vuejs/create-vue" target="_blank" rel="noreferrer">create-vue</a> and <a href="https://github.com/sveltejs/kit" target="_blank" rel="noreferrer">create-svelte</a>. There is a community-maintained list of templates at <a href="https://github.com/vitejs/awesome-vite#templates" target="_blank" rel="noreferrer">Awesome Vite</a>.</p>
<h2 id="dev-improvements" tabindex="-1">Dev Improvements <a class="header-anchor" href="#dev-improvements" aria-label="Permalink to &quot;Dev Improvements&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="vite-cli" tabindex="-1">Vite CLI <a class="header-anchor" href="#vite-cli" aria-label="Permalink to &quot;Vite CLI&quot;">&ZeroWidthSpace;</a></h3>
<pre style="background-color: var(--vp-code-block-bg);padding:2em;border-radius:8px;max-width:100%;overflow-x:auto;">
  <span style="color:lightgreen"><b>VITE</b></span> <span style="color:lightgreen">v3.0.0</span>  <span style="color:gray">ready in <b>320</b> ms</span>

  <span style="color:lightgreen"><b>➜</b></span>  <span style="color:white"><b>Local</b>:</span>   <span style="color:cyan">http://127.0.0.1:5173/</span>
  <span style="color:green"><b>➜</b></span>  <span style="color:gray"><b>Network</b>: use --host to expose</span>
</pre>
<p>Apart from the CLI’s aesthetics improvements, you’ll notice that the default dev server port is now 5173 and the preview server listening at 4173. This change ensures Vite will avoid collisions with other tools.</p>
<h3 id="improved-websocket-connection-strategy" tabindex="-1">Improved WebSocket Connection Strategy <a class="header-anchor" href="#improved-websocket-connection-strategy" aria-label="Permalink to &quot;Improved WebSocket Connection Strategy&quot;">&ZeroWidthSpace;</a></h3>
<p>One of the pain points of Vite 2 was configuring the server when running behind a proxy. Vite 3 changes the default connection scheme so it works out of the box in most scenarios. All these setups are now tested as part of the Vite Ecosystem CI through <a href="https://github.com/sapphi-red/vite-setup-catalogue" target="_blank" rel="noreferrer"><code>vite-setup-catalogue</code></a>.</p>
<h3 id="cold-start-improvements" tabindex="-1">Cold Start Improvements <a class="header-anchor" href="#cold-start-improvements" aria-label="Permalink to &quot;Cold Start Improvements&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite now avoids full reload during cold start when imports are injected by plugins while crawling the initial statically imported modules (<a href="https://github.com/vitejs/vite/issues/8869" target="_blank" rel="noreferrer">#8869</a>).</p>
<details>
  <summary><b>Click to learn more</b></summary>
<p>In Vite 2.9, both the scanner and optimizer were run in the background. In the best scenario, where the scanner would find every dependency, no reload was needed in cold start. But if the scanner missed a dependency, a new optimization phase and then a reload were needed. Vite was able to avoid some of these reloads in v2.9, as we detected if the new optimized chunks were compatible with the ones the browser had. But if there was a common dep, the sub-chunks could change and a reload was required to avoid duplicated state. In Vite 3, the optimized deps aren't handed to the browser until the crawling of static imports is done. A quick optimization phase is issued if there is a missing dep (for example, injected by a plugin), and only then, the bundled deps are sent. So, a page reload is no longer needed for these cases.</p>
</details>
<img style="background-color: var(--vp-code-block-bg);padding:4%;border-radius:8px;" width="100%" height="auto" src="../images/vite-3-cold-start.svg" alt="Two graphs comparing Vite 2.9 and Vite 3 optimization strategy">
<h3 id="import-meta-glob" tabindex="-1">import.meta.glob <a class="header-anchor" href="#import-meta-glob" aria-label="Permalink to &quot;import.meta.glob&quot;">&ZeroWidthSpace;</a></h3>
<p><code>import.meta.glob</code> support was rewritten. Read about the new features in the <a href="/guide/features.html#glob-import">Glob Import Guide</a>:</p>
<p><a href="/guide/features.html#multiple-patterns">Multiple Patterns</a> can be passed as an array</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./another/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span></code></pre>
</div><p><a href="/guide/features.html#negative-patterns">Negative Patterns</a> are now supported (prefixed with <code>!</code>) to ignore some specific files</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'!**/bar.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">])</span></span></code></pre>
</div><p><a href="/guide/features.html#named-imports">Named Imports</a> can be specified to improve tree-shaking</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, { import: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'setup'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> })</span></span></code></pre>
</div><p><a href="/guide/features.html#custom-queries">Custom Queries</a> can be passed to attach metadata</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, { query: { custom: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'data'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> } })</span></span></code></pre>
</div><p><a href="/guide/features.html#glob-import">Eager Imports</a> is now passed as a flag</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">glob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'./dir/*.js'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, { eager: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> })</span></span></code></pre>
</div><h3 id="aligning-wasm-import-with-future-standards" tabindex="-1">Aligning WASM Import with Future Standards <a class="header-anchor" href="#aligning-wasm-import-with-future-standards" aria-label="Permalink to &quot;Aligning WASM Import with Future Standards&quot;">&ZeroWidthSpace;</a></h3>
<p>The WebAssembly import API has been revised to avoid collisions with future standards and to make it more flexible:</p>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> './example.wasm?init'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  instance.exports.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">})</span></span></code></pre>
</div><p>Learn more in the <a href="/guide/features.html#webassembly">WebAssembly guide</a></p>
<h2 id="build-improvements" tabindex="-1">Build Improvements <a class="header-anchor" href="#build-improvements" aria-label="Permalink to &quot;Build Improvements&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="esm-ssr-build-by-default" tabindex="-1">ESM SSR Build by Default <a class="header-anchor" href="#esm-ssr-build-by-default" aria-label="Permalink to &quot;ESM SSR Build by Default&quot;">&ZeroWidthSpace;</a></h3>
<p>Most SSR frameworks in the ecosystem were already using ESM builds. So, Vite 3 makes ESM the default format for SSR builds. This allows us to streamline previous <a href="https://vite.dev/guide/ssr.html#ssr-externals" target="_blank" rel="noreferrer">SSR externalization heuristics</a>, externalizing dependencies by default.</p>
<h3 id="improved-relative-base-support" tabindex="-1">Improved Relative Base Support <a class="header-anchor" href="#improved-relative-base-support" aria-label="Permalink to &quot;Improved Relative Base Support&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite 3 now properly supports relative base (using <code>base: ''</code>), allowing built assets to be deployed to different bases without re-building. This is useful when the base isn't known at build time, for example when deploying to content-addressable networks like <a href="https://ipfs.io/" target="_blank" rel="noreferrer">IPFS</a>.</p>
<h2 id="experimental-features" tabindex="-1">Experimental Features <a class="header-anchor" href="#experimental-features" aria-label="Permalink to &quot;Experimental Features&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="built-asset-paths-fine-grained-control-experimental" tabindex="-1">Built Asset Paths fine-grained Control (Experimental) <a class="header-anchor" href="#built-asset-paths-fine-grained-control-experimental" aria-label="Permalink to &quot;Built Asset Paths fine-grained Control (Experimental)&quot;">&ZeroWidthSpace;</a></h3>
<p>There are other deploy scenarios where this isn't enough. For example, if the generated hashed assets need to be deployed to a different CDN from the public files, then finer-grained control is required over path generation at build time. Vite 3 provides an experimental API to modify the built file paths. Check <a href="/guide/build.html#advanced-base-options">Build Advanced Base Options</a> for more information.</p>
<h3 id="esbuild-deps-optimization-at-build-time-experimental" tabindex="-1">Esbuild Deps Optimization at Build Time (Experimental) <a class="header-anchor" href="#esbuild-deps-optimization-at-build-time-experimental" aria-label="Permalink to &quot;Esbuild Deps Optimization at Build Time (Experimental)&quot;">&ZeroWidthSpace;</a></h3>
<p>One of the main differences between dev and build time is how Vite handles dependencies. During build time, <a href="https://github.com/rollup/plugins/tree/master/packages/commonjs" target="_blank" rel="noreferrer"><code>@rollup/plugin-commonjs</code></a> is used to allow importing CJS only dependencies (like React). When using the dev server, esbuild is used instead to pre-bundle and optimize dependencies, and an inline interop scheme is applied while transforming user code importing CJS deps. During the development of Vite 3, we introduced the changes needed to also allow the use of <a href="https://v3.vite.dev/guide/migration.html#using-esbuild-deps-optimization-at-build-time" target="_blank" rel="noreferrer">esbuild to optimize dependencies during build time</a>. <a href="https://github.com/rollup/plugins/tree/master/packages/commonjs" target="_blank" rel="noreferrer"><code>@rollup/plugin-commonjs</code></a> can then be avoided, making dev and build time work in the same way.</p>
<p>Given that Rollup v3 will be out in the next months, and we're going to follow up with another Vite major, we've decided to make this mode optional to reduce v3 scope and give Vite and the ecosystem more time to work out possible issues with the new CJS interop approach during build time. Frameworks may switch to using esbuild deps optimization during build time by default at their own pace before Vite 4.</p>
<h3 id="hmr-partial-accept-experimental" tabindex="-1">HMR Partial Accept (Experimental) <a class="header-anchor" href="#hmr-partial-accept-experimental" aria-label="Permalink to &quot;HMR Partial Accept (Experimental)&quot;">&ZeroWidthSpace;</a></h3>
<p>There is opt-in support for <a href="https://github.com/vitejs/vite/pull/7324" target="_blank" rel="noreferrer">HMR Partial Accept</a>. This feature could unlock finer-grained HMR for framework components that export several bindings in the same module. You can learn more at <a href="https://github.com/vitejs/vite/discussions/7309" target="_blank" rel="noreferrer">the discussion for this proposal</a>.</p>
<h2 id="bundle-size-reduction" tabindex="-1">Bundle Size Reduction <a class="header-anchor" href="#bundle-size-reduction" aria-label="Permalink to &quot;Bundle Size Reduction&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite cares about its publish and install footprint; a fast installation of a new app is a feature. Vite bundles most of its dependencies and tries to use modern lightweight alternatives where possible. Continuing with this ongoing goal, Vite 3 publish size is 30% smaller than v2.</p>
<table tabindex="0">
<thead>
<tr>
<th></th>
<th style="text-align:center">Publish Size</th>
<th style="text-align:center">Install Size</th>
</tr>
</thead>
<tbody>
<tr>
<td>Vite 2.9.14</td>
<td style="text-align:center">4.38MB</td>
<td style="text-align:center">19.1MB</td>
</tr>
<tr>
<td>Vite 3.0.0</td>
<td style="text-align:center">3.05MB</td>
<td style="text-align:center">17.8MB</td>
</tr>
<tr>
<td>Reduction</td>
<td style="text-align:center">-30%</td>
<td style="text-align:center">-7%</td>
</tr>
</tbody>
</table>
<p>In part, this reduction was possible by making some dependencies that most users weren't needing optional. First, <a href="https://github.com/terser/terser" target="_blank" rel="noreferrer">Terser</a> is no longer installed by default. This dependency was no longer needed since we already made esbuild the default minifier for both JS and CSS in Vite 2. If you use <code>build.minify: 'terser'</code>, you'll need to install it (<code>npm add -D terser</code>). We also moved <a href="https://github.com/digitalbazaar/forge" target="_blank" rel="noreferrer">node-forge</a> out of the monorepo, implementing support for automatic https certificate generation as a new plugin: <a href="https://v3.vite.dev/guide/migration.html#automatic-https-certificate-generation" target="_blank" rel="noreferrer"><code>@vitejs/plugin-basic-ssl</code></a>. Since this feature only creates untrusted certificates that are not added to the local store, it didn't justify the added size.</p>
<h2 id="bug-fixing" tabindex="-1">Bug Fixing <a class="header-anchor" href="#bug-fixing" aria-label="Permalink to &quot;Bug Fixing&quot;">&ZeroWidthSpace;</a></h2>
<p>A triaging marathon was spearheaded by <a href="https://twitter.com/bluwyoo" target="_blank" rel="noreferrer">@bluwyoo</a>, <a href="https://twitter.com/sapphi_red" target="_blank" rel="noreferrer">@sapphi_red</a>, that recently joined the Vite team. During the past three months, the Vite open issues were reduced from 770 to 400. And this dive was achieved while the newly open PRs were at an all-time high. At the same time, <a href="https://twitter.com/haoqunjiang" target="_blank" rel="noreferrer">@haoqunjiang</a> had also curated a comprehensive <a href="https://github.com/vitejs/vite/discussions/8232" target="_blank" rel="noreferrer">overview of Vite issues</a>.</p>
<p><a href="https://www.repotrends.com/vitejs/vite" target="_blank" rel="noreferrer"><img src="./../images/v3-open-issues-and-PRs.png" alt="Graph of open issues and pull requests in Vite"></a></p>
<p><a href="https://www.repotrends.com/vitejs/vite" target="_blank" rel="noreferrer"><img src="./../images/v3-new-open-issues-and-PRs.png" alt="Graph of new issues and pull requests in Vite"></a></p>
<h2 id="compatibility-notes" tabindex="-1">Compatibility Notes <a class="header-anchor" href="#compatibility-notes" aria-label="Permalink to &quot;Compatibility Notes&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>Vite no longer supports Node.js 12 / 13 / 15, which reached its EOL. Node.js 14.18+ / 16+ is now required.</li>
<li>Vite is now published as ESM, with a CJS proxy to the ESM entry for compatibility.</li>
<li>The Modern Browser Baseline now targets browsers which support the <a href="https://caniuse.com/es6-module" target="_blank" rel="noreferrer">native ES Modules</a>, <a href="https://caniuse.com/es6-module-dynamic-import" target="_blank" rel="noreferrer">native ESM dynamic import</a>, and <a href="https://caniuse.com/mdn-javascript_operators_import_meta" target="_blank" rel="noreferrer"><code>import.meta</code></a> features.</li>
<li>JS file extensions in SSR and library mode now use a valid extension (<code>js</code>, <code>mjs</code>, or <code>cjs</code>) for output JS entries and chunks based on their format and the package type.</li>
</ul>
<p>Learn more in the <a href="https://v3.vite.dev/guide/migration.html" target="_blank" rel="noreferrer">Migration Guide</a>.</p>
<h2 id="upgrades-to-vite-core" tabindex="-1">Upgrades to Vite Core <a class="header-anchor" href="#upgrades-to-vite-core" aria-label="Permalink to &quot;Upgrades to Vite Core&quot;">&ZeroWidthSpace;</a></h2>
<p>While working towards Vite 3, we also improved the contributing experience for collaborators to <a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">Vite Core</a>.</p>
<ul>
<li>Unit and E2E tests have been migrated to <a href="https://vitest.dev" target="_blank" rel="noreferrer">Vitest</a>, providing a faster and more stable DX. This move also works as dog fooding for an important infrastructure project in the ecosystem.</li>
<li>VitePress build is now tested as part of CI.</li>
<li>Vite upgraded to <a href="https://pnpm.io/" target="_blank" rel="noreferrer">pnpm 7</a>, following the rest of the ecosystem.</li>
<li>Playgrounds have been moved to <a href="https://github.com/vitejs/vite/tree/main/playground" target="_blank" rel="noreferrer"><code>/playgrounds</code></a> out of packages directory.</li>
<li>The packages and playgrounds are now <code>&quot;type&quot;: &quot;module&quot;</code>.</li>
<li>Plugins are now bundled using <a href="https://github.com/unjs/unbuild" target="_blank" rel="noreferrer">unbuild</a>, and <a href="https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue-jsx" target="_blank" rel="noreferrer">plugin-vue-jsx</a> and <a href="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" target="_blank" rel="noreferrer">plugin-legacy</a> were moved to TypeScript.</li>
</ul>
<h2 id="the-ecosystem-is-ready-for-v3" tabindex="-1">The Ecosystem is Ready for v3 <a class="header-anchor" href="#the-ecosystem-is-ready-for-v3" aria-label="Permalink to &quot;The Ecosystem is Ready for v3&quot;">&ZeroWidthSpace;</a></h2>
<p>We have worked closely with projects in the ecosystem to ensure that frameworks powered by Vite are ready for Vite 3. <a href="https://github.com/vitejs/vite-ecosystem-ci" target="_blank" rel="noreferrer">vite-ecosystem-ci</a> allows us to run the CI's from the leading players in the ecosystem against Vite's main branch and receive timely reports before introducing a regression. Today's release should soon be compatible with most projects using Vite.</p>
<h2 id="acknowledgments" tabindex="-1">Acknowledgments <a class="header-anchor" href="#acknowledgments" aria-label="Permalink to &quot;Acknowledgments&quot;">&ZeroWidthSpace;</a></h2>
<p>Vite 3 is the result of the aggregate effort of members of the <a href="/team.html">Vite Team</a> working together with ecosystem project maintainers and other collaborators to Vite core.</p>
<p>We want to thank everyone that have implemented features, and fixes, given feedback, and have been involved in Vite 3:</p>
<ul>
<li>Vite team members <a href="https://twitter.com/youyuxi" target="_blank" rel="noreferrer">@youyuxi</a>, <a href="https://twitter.com/patak_dev" target="_blank" rel="noreferrer">@patak_dev</a>, <a href="https://twitter.com/antfu7" target="_blank" rel="noreferrer">@antfu7</a>, <a href="https://twitter.com/bluwyoo" target="_blank" rel="noreferrer">@bluwyoo</a>, <a href="https://twitter.com/sapphi_red" target="_blank" rel="noreferrer">@sapphi_red</a>, <a href="https://twitter.com/haoqunjiang" target="_blank" rel="noreferrer">@haoqunjiang</a>, <a href="https://github.com/poyoho" target="_blank" rel="noreferrer">@poyoho</a>, <a href="https://twitter.com/Shini_92" target="_blank" rel="noreferrer">@Shini_92</a>, and <a href="https://twitter.com/retropragma" target="_blank" rel="noreferrer">@retropragma</a>.</li>
<li><a href="https://github.com/benmccann" target="_blank" rel="noreferrer">@benmccann</a>, <a href="https://twitter.com/danielcroe" target="_blank" rel="noreferrer">@danielcroe</a>, <a href="https://twitter.com/brillout" target="_blank" rel="noreferrer">@brillout</a>, <a href="https://twitter.com/sheremet_va" target="_blank" rel="noreferrer">@sheremet_va</a>, <a href="https://twitter.com/userquin" target="_blank" rel="noreferrer">@userquin</a>, <a href="https://twitter.com/enzoinnocenzi" target="_blank" rel="noreferrer">@enzoinnocenzi</a>, <a href="https://twitter.com/maximomussini" target="_blank" rel="noreferrer">@maximomussini</a>, <a href="https://twitter.com/IanVanSchooten" target="_blank" rel="noreferrer">@IanVanSchooten</a>, the <a href="https://astro.build/" target="_blank" rel="noreferrer">Astro team</a>, and all other maintainers of frameworks and plugins in the ecosystem in that helped shape v3.</li>
<li><a href="https://github.com/dominikg" target="_blank" rel="noreferrer">@dominikg</a> for his work on vite-ecosystem-ci.</li>
<li><a href="https://twitter.com/ZoltanKochan" target="_blank" rel="noreferrer">@ZoltanKochan</a> for his work on <a href="https://pnpm.io/" target="_blank" rel="noreferrer">pnpm</a>, and for his responsiveness when we needed support with it.</li>
<li><a href="https://github.com/rixo" target="_blank" rel="noreferrer">@rixo</a> for HMR Partial Accept support.</li>
<li><a href="https://twitter.com/KiaKing85" target="_blank" rel="noreferrer">@KiaKing85</a> for getting the theme ready for the Vite 3 release, and <a href="https://twitter.com/_brc_dd" target="_blank" rel="noreferrer">@_brc_dd</a> for working on the VitePress internals.</li>
<li><a href="https://twitter.com/CodingWithCego" target="_blank" rel="noreferrer">@CodingWithCego</a> for the new Spanish translation, and <a href="https://twitter.com/ShenQingchuan" target="_blank" rel="noreferrer">@ShenQingchuan</a>, <a href="https://github.com/hiro-lapis" target="_blank" rel="noreferrer">@hiro-lapis</a> and others in the Chinese and Japanese translations teams for keeping the translated docs up to date.</li>
</ul>
<p>We also want to thank individuals and companies sponsoring the Vite team, and companies investing in Vite development: some of <a href="https://twitter.com/antfu7" target="_blank" rel="noreferrer">@antfu7</a>'s work on Vite and the ecosystem is part of his job at <a href="https://nuxtlabs.com/" target="_blank" rel="noreferrer">Nuxt Labs</a>, and <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a> hired <a href="https://twitter.com/patak_dev" target="_blank" rel="noreferrer">@patak_dev</a> to work full time on Vite.</p>
<h2 id="what-s-next" tabindex="-1">What's Next <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What's Next&quot;">&ZeroWidthSpace;</a></h2>
<p>We'll take the following months to ensure a smooth transition for all the projects built on top of Vite. So the first minors will be focused on continuing our triaging efforts with a focus on newly opened issues.</p>
<p>The Rollup team is <a href="https://twitter.com/lukastaegert/status/1544186847399743488" target="_blank" rel="noreferrer">working on its next major</a>, to be released in the following months. Once the Rollup plugins ecosystem has time to update, we'll follow up with a new Vite major. This will give us another opportunity to introduce more significant changes this year, which we could take to stabilize some of the experimental features introduced in this release.</p>
<p>If you are interested in helping improve Vite, the best way to get on board is to help with triaging issues. Join <a href="https://chat.vite.dev" target="_blank" rel="noreferrer">our Discord</a> and look for the <code>#contributing</code> channel. Or get involved in our <code>#docs</code>, <code>#help</code> others, or create plugins. We are just getting started. There are many open ideas to keep improving Vite's DX.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Announcing Vite 2.0]]></title>
            <link>https://vite.dev/blog/announcing-vite2.html</link>
            <guid>https://vite.dev/blog/announcing-vite2.html</guid>
            <pubDate>Tue, 16 Feb 2021 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="announcing-vite-2-0" tabindex="-1">Announcing Vite 2.0 <a class="header-anchor" href="#announcing-vite-2-0" aria-label="Permalink to &quot;Announcing Vite 2.0&quot;">&ZeroWidthSpace;</a></h1>
<p><em>February 16, 2021</em> - Check out the <a href="./announcing-vite3.html">Vite 3.0 announcement</a></p>
<p style="text-align:center">
  <img src="/logo.png" style="height:200px">
</p>
<p>Today we are excited to announce the official release of Vite 2.0!</p>
<p>Vite (French word for &quot;fast&quot;, pronounced <code>/vit/</code>) is a new kind of build tool for frontend web development. Think a pre-configured dev server + bundler combo, but leaner and faster. It leverages browser's <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noreferrer">native ES modules</a> support and tools written in compile-to-native languages like <a href="https://esbuild.github.io/" target="_blank" rel="noreferrer">esbuild</a> to deliver a snappy and modern development experience.</p>
<p>To get a sense of how fast Vite is, check out <a href="https://twitter.com/amasad/status/1355379680275128321" target="_blank" rel="noreferrer">this video comparison</a> of booting up a React application on Repl.it using Vite vs. <code>create-react-app</code> (CRA).</p>
<p>If you've never heard of Vite before and would love to learn more about it, check out <a href="https://vite.dev/guide/why.html" target="_blank" rel="noreferrer">the rationale behind the project</a>. If you are interested in how Vite differs from other similar tools, check out the <a href="https://v5.vite.dev/guide/comparisons.html" target="_blank" rel="noreferrer">comparisons</a>.</p>
<h2 id="what-s-new-in-2-0" tabindex="-1">What's New in 2.0 <a class="header-anchor" href="#what-s-new-in-2-0" aria-label="Permalink to &quot;What's New in 2.0&quot;">&ZeroWidthSpace;</a></h2>
<p>Since we decided to completely refactor the internals before 1.0 got out of RC, this is in fact the first stable release of Vite. That said, Vite 2.0 brings about many big improvements over its previous incarnation:</p>
<h3 id="framework-agnostic-core" tabindex="-1">Framework Agnostic Core <a class="header-anchor" href="#framework-agnostic-core" aria-label="Permalink to &quot;Framework Agnostic Core&quot;">&ZeroWidthSpace;</a></h3>
<p>The original idea of Vite started as a <a href="https://github.com/vuejs/vue-dev-server" target="_blank" rel="noreferrer">hacky prototype that serves Vue single-file components over native ESM</a>. Vite 1 was a continuation of that idea with HMR implemented on top.</p>
<p>Vite 2.0 takes what we learned along the way and is redesigned from scratch with a more robust internal architecture. It is now completely framework agnostic, and all framework-specific support is delegated to plugins. There are now <a href="https://github.com/vitejs/vite/tree/main/packages/create-vite" target="_blank" rel="noreferrer">official templates for Vue, React, Preact, Lit Element</a>, and ongoing community efforts for Svelte integration.</p>
<h3 id="new-plugin-format-and-api" tabindex="-1">New Plugin Format and API <a class="header-anchor" href="#new-plugin-format-and-api" aria-label="Permalink to &quot;New Plugin Format and API&quot;">&ZeroWidthSpace;</a></h3>
<p>Inspired by <a href="https://github.com/preactjs/wmr" target="_blank" rel="noreferrer">WMR</a>, the new plugin system extends Rollup's plugin interface and is <a href="https://vite-rollup-plugins.patak.dev/" target="_blank" rel="noreferrer">compatible with many Rollup plugins</a> out of the box. Plugins can use Rollup-compatible hooks, with additional Vite-specific hooks and properties to adjust Vite-only behavior (e.g. differentiating dev vs. build or custom handling of HMR).</p>
<p>The <a href="https://vite.dev/guide/api-javascript.html" target="_blank" rel="noreferrer">programmatic API</a> has also been greatly improved to facilitate higher level tools / frameworks built on top of Vite.</p>
<h3 id="esbuild-powered-dep-pre-bundling" tabindex="-1">esbuild Powered Dep Pre-Bundling <a class="header-anchor" href="#esbuild-powered-dep-pre-bundling" aria-label="Permalink to &quot;esbuild Powered Dep Pre-Bundling&quot;">&ZeroWidthSpace;</a></h3>
<p>Since Vite is a native ESM dev server, it pre-bundles dependencies to reduce the number browser requests and handle CommonJS to ESM conversion. Previously Vite did this using Rollup, and in 2.0 it now uses <code>esbuild</code> which results in 10-100x faster dependency pre-bundling. As a reference, cold-booting a test app with heavy dependencies like React Material UI previously took 28 seconds on an M1-powered MacBook Pro and now takes ~1.5 seconds. Expect similar improvements if you are switching from a traditional bundler based setup.</p>
<h3 id="first-class-css-support" tabindex="-1">First-class CSS Support <a class="header-anchor" href="#first-class-css-support" aria-label="Permalink to &quot;First-class CSS Support&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite treats CSS as a first-class citizen of the module graph and supports the following out of the box:</p>
<ul>
<li><strong>Resolver enhancement</strong>: <code>@import</code> and <code>url()</code> paths in CSS are enhanced with Vite's resolver to respect aliases and npm dependencies.</li>
<li><strong>URL rebasing</strong>: <code>url()</code> paths are automatically rebased regardless of where the file is imported from.</li>
<li><strong>CSS code splitting</strong>: a code-split JS chunk also emits a corresponding CSS file, which is automatically loaded in parallel with the JS chunk when requested.</li>
</ul>
<h3 id="server-side-rendering-ssr-support" tabindex="-1">Server-Side Rendering (SSR) Support <a class="header-anchor" href="#server-side-rendering-ssr-support" aria-label="Permalink to &quot;Server-Side Rendering (SSR) Support&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite 2.0 ships with <a href="https://vite.dev/guide/ssr.html" target="_blank" rel="noreferrer">experimental SSR support</a>. Vite provides APIs to efficiently load and update ESM-based source code in Node.js during development (almost like server-side HMR), and automatically externalizes CommonJS-compatible dependencies to improve development and SSR build speed. The production server can be completely decoupled from Vite, and the same setup can be easily adapted to perform pre-rendering / SSG.</p>
<p>Vite SSR is provided as a low-level feature and we are expecting to see higher level frameworks leveraging it under the hood.</p>
<h3 id="opt-in-legacy-browser-support" tabindex="-1">Opt-in Legacy Browser Support <a class="header-anchor" href="#opt-in-legacy-browser-support" aria-label="Permalink to &quot;Opt-in Legacy Browser Support&quot;">&ZeroWidthSpace;</a></h3>
<p>Vite targets modern browsers with native ESM support by default, but you can also opt-in to support legacy browsers via the official <a href="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" target="_blank" rel="noreferrer">@vitejs/plugin-legacy</a>. The plugin automatically generates dual modern/legacy bundles, and delivers the right bundle based on browser feature detection, ensuring more efficient code in modern browsers that support them.</p>
<h2 id="give-it-a-try" tabindex="-1">Give it a Try! <a class="header-anchor" href="#give-it-a-try" aria-label="Permalink to &quot;Give it a Try!&quot;">&ZeroWidthSpace;</a></h2>
<p>That was a lot of features, but getting started with Vite is simple! You can spin up a Vite-powered app literally in a minute, starting with the following command (make sure you have Node.js &gt;=12):</p>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> @vitejs/app</span></span></code></pre>
</div><p>Then, check out <a href="https://vite.dev/guide/" target="_blank" rel="noreferrer">the guide</a> to see what Vite provides out of the box. You can also check out the source code on <a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">GitHub</a>, follow updates on <a href="https://twitter.com/vite_js" target="_blank" rel="noreferrer">Twitter</a>, or join discussions with other Vite users on our <a href="http://chat.vite.dev/" target="_blank" rel="noreferrer">Discord chat server</a>.</p>
]]></content:encoded>
        </item>
    </channel>
</rss>